{"version":3,"sources":["components/AddPet/AddPet.module.css","components/PostList/PostList.module.css","components/Header/Header.module.css","components/Search/Search.module.css","components/UserProfile/UserProfile.module.css","components/AddPost/AddPost.module.css","components/PetsProfile/PetsProfile.module.css","components/Post/PostCard.module.css","components/Input/Input.module.css","components/TextArea/TextArea.module.css","components/Tooltip/Tooltip.module.css","components/Login/Login.module.css","components/Blobs/Blobs.module.css","components/Registration/Registration.module.css","components/UpdadeUser/UpdateUser.module.css","components/Button/Button.module.css","components/MenuBar/MenuBar.module.css","components/ThemeToggle/ThemeToggle.module.css","components/Modal/Modal.module.css","components/AboutUS/AboutUs.tsx","context/ThemeContext.tsx","services/helpers.ts","services/pets.ts","redux/constants.ts","redux/actions/petActions.tsx","components/Button/Button.tsx","components/Input/Input.tsx","components/TextArea/TextArea.tsx","components/AddPet/AddPet.tsx","components/AddPost/AddPost.tsx","components/ConfirmRegisration/Confirm.tsx","components/Donations/Donations.tsx","components/ThemeToggle/ThemeToggle.tsx","components/MenuBar/MenuBar.tsx","services/posts.ts","redux/actions/postsActions.tsx","components/Header/Header.tsx","services/validation.ts","services/auth.ts","services/user.ts","redux/actions/authActions.ts","components/Login/Login.tsx","components/Modal/Comments.tsx","components/Modal/Modal.tsx","components/PetHome/PetHome.tsx","components/Post/PostCard.tsx","components/Tooltip/Tooltip.tsx","components/PetsProfile/PetsProfile.tsx","components/PostList/FavotitePosts.tsx","components/Search/Search.tsx","components/Blobs/Blobs.tsx","components/PostList/PostList.tsx","components/Registration/Registration.tsx","components/UpdadeUser/UpdadeUser.tsx","redux/actions/userActions.tsx","components/UserProfile/IdUser.tsx","components/UserProfile/UserProfile.tsx","routing/RootRouter.tsx","redux/redusers/postsReduser.tsx","redux/redusers/authReduser.ts","redux/redusers/petsReduser.tsx","redux/redusers/userReduser.ts","redux/redusers/homeReduser.tsx","redux/store.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","AboutUs","src","darkTheme","text","blackWhiteText","grayText","timeText","colorOfButton","borderOfButton","colorOfButtonHover","colorOfTextInput","background","filter","searchBackground","postBackground","lightTheme","ThemeContext","createContext","isDark","changeIsDark","theme","ThemeProdiver","children","useState","localStorage","getItem","setIsDark","useEffect","setItem","JSON","stringify","Provider","value","petsFetch","url","config","a","access","fetch","headers","Authorization","response","ok","json","error","detail","includes","refresh","method","body","responseToken","result","refreshedResponse","getPets","ACTIONS","addPets","pets","count","type","fetchPets","dispatch","getState","petsReducer","addPet","pet","fetchPet","id","Button","onClick","useContext","style","border","className","styles","btn","btn_dark","Input","label","onChange","onKeyDown","name","list","color","input","input_dark","TextArea","AddPet","navigate","useNavigate","setName","description","setDescription","species","setSpecies","sex","setSex","hasHome","setHasHome","image","setImage","birthDate","setBirthDate","imageFile","setImageFile","errors","setErrors","useDispatch","addPostIndex","addPostWrraper","addPost","addText","event","target","checked","birth_date","has_home","home","addImg","addName","addBtn","accept","files","reader","FileReader","readAsDataURL","onload","inputAddImg","addManeBtn","formData","FormData","append","Accept","then","UploadFile","setFiles","setText","preview","setPreview","fileobj","container","wrapper","left","textArea","length","multiple","preventDefault","images","push","i","right","map","index","alt","height","width","objectFit","petId","sessionStorage","undefined","Confirm","email","useSelector","state","authReducer","username","to","Donations","ThemeToggle","inputChecked","switchCheckbox","switch","slider","MenuBar","closeMenuBar","isLoggedIn","petInHome","menuBar","removeItem","setTimeout","window","location","reload","getPosts","getPostsLike","addPosts","posts","fetchPosts","postsReducer","fetchPetPost","petPosts","post","fetchPost","Header","isLog","isActive","setIsActive","useCallback","header","headerBlock","logoandmenu","logoBlock","logo","menuUser","navlink","favor","user","userInfo","userImg","userName","logout","buttonLogin","_emailLanguageRegExp","_emailRegExp","_passwordLanguageRegExp","_passwordRegExp","REQUIRED_FIELD","WRONG_PASSWORD_LENGTH","NOT_ERROR","validationService","max","min","WRONG_MAX_LENGTH","WRONG_MIN_LENGTH","test","password","repeatedPassword","registerUser","loginUser","getProfile","getUser","userData","getUserData","profile","registerFailure","registerSuccess","loginSuccess","Login","setUsername","setPassword","onChangeUsername","validateName","onChangePassword","errorValues","Object","values","flat","login","mainForm","title","form","validatePassword","every","Comments","owner_id","time","post_id","comment","userInfoComment","petName","delete","toString","split","join","Modal","postId","useParams","comments","onDismiss","document","classList","remove","add","textComment","setTextComment","Number","inner","containerModal","dots","adaptiveHeight","variableWidth","data","slickSlide","info","avatar","item","deleteComment","fontSize","cursor","buttom","likesAndComments","icon","liked","likeDelete","like","likes_count","comments_count","footerContainer","footer","textarea","placeholder","alert","close","closeBtn","PetHome","console","log","PostCard","onClickNav","postCard","cardImage","arrows","cardContent","contentText","Tooltip","show","setShow","tooltipContainer","tooltipBox","visible","tooltipArrow","onMouseEnter","onMouseLeave","Pet","useLocation","petCard","country","city","owner_id_img","addHome","buttonAdd","deletePostId","backgroundLocation","Math","random","slice","noPostsTitle","FavoritePosts","setPostsArr","allPosts","postList","group","backgroundColor","petInfo","SearchBar","closeSearchBar","openSearchBar","isVisible","onChangeCountry","onChangeSpecies","onChangeGender","onChangeDate","onChangeHasHome","onChangeCity","gte_date","setGteDate","hasHomeStr","setHasHomeStr","countries","Country","getAllCountries","setCountry","states","setStates","cities","setCities","searchContaiter","searchContainerVisible","select_dark","select","selected","isoCode","State","getStatesOfCountry","City","getCitiesOfState","Container","blob1","blob2","blob3","blob4","PostList","isSearchVisible","setIsSearchVisible","setCity","searchPosts","postLink","Registration","setUserName","setEmail","repeatPassword","setRepeatPassword","emailState","usernameState","onChangeUserName","onChangeEmail","validateEmail","onChangeRepeatPassword","registration","validateRepeatedPassword","register","Update","newEmail","setNewEmail","newCountry","setNewCountry","newCity","setNewCity","address","newAddress","setNewAddress","phone","newPhone","setNewPhone","statess","addUser","IdUser","usserId","userReducer","String","UserProfile","userProfile","userContainer","userWrapper","petList","petContainer","petDelete","petPicture","petImg","RootRouter","path","element","replace","defaultState","Date","store","createStore","combineReducers","action","homeReducer","composeWithDevTools","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2e083646.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addPostIndex\":\"AddPet_addPostIndex__1sOV2\",\"addPost\":\"AddPet_addPost__30Iyz\",\"addText\":\"AddPet_addText__ARdk7\",\"species\":\"AddPet_species__1_bGh\",\"sex\":\"AddPet_sex__2vpFD\",\"addBtn\":\"AddPet_addBtn__1Ofov\",\"addImg\":\"AddPet_addImg__3Zc_g\",\"inputAddImg\":\"AddPet_inputAddImg__DwPoC\",\"input\":\"AddPet_input__2HuE-\",\"input_dark\":\"AddPet_input_dark__3q60f\",\"birth_date\":\"AddPet_birth_date__2JSnd\",\"has_home\":\"AddPet_has_home__xUpUP\",\"label\":\"AddPet_label__1pAFL\",\"addName\":\"AddPet_addName__ioS_L\",\"addManeBtn\":\"AddPet_addManeBtn__30iLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostList_container__27HOz\",\"allPosts\":\"PostList_allPosts__WmAWo\",\"group\":\"PostList_group__gy3rs\",\"avatar\":\"PostList_avatar__29hf-\",\"petInfo\":\"PostList_petInfo__2fsR4\",\"postList\":\"PostList_postList__2Esmw\",\"petName\":\"PostList_petName__1s8ui\",\"postLink\":\"PostList_postLink__1ud15\",\"icon\":\"PostList_icon__11L8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"headerBlock\":\"Header_headerBlock__1Aa9H\",\"logoandmenu\":\"Header_logoandmenu___CZZy\",\"logoBlock\":\"Header_logoBlock__1MAEm\",\"logo\":\"Header_logo__3_SJs\",\"searchContaiter\":\"Header_searchContaiter__3axEN\",\"menuUser\":\"Header_menuUser__5VHpO\",\"navlink\":\"Header_navlink__1nhSA\",\"home\":\"Header_home__1Vlp4\",\"favor\":\"Header_favor__1Pljy\",\"buttonLogin\":\"Header_buttonLogin__XoqjP\",\"menu\":\"Header_menu__BQHSW\",\"btn\":\"Header_btn__25p7W\",\"userImg\":\"Header_userImg__29vwU\",\"userName\":\"Header_userName__2h_yj\",\"logout\":\"Header_logout__1UGPC\",\"userInfo\":\"Header_userInfo__31k6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContaiter\":\"Search_searchContaiter__3hjHO\",\"search\":\"Search_search__3OUtB\",\"container\":\"Search_container__1ATIJ\",\"searchContainerVisible\":\"Search_searchContainerVisible__3C4db\",\"select_dark\":\"Search_select_dark__1y6xh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userProfile\":\"UserProfile_userProfile__2oCpD\",\"userContainer\":\"UserProfile_userContainer__2WlkL\",\"cardImage\":\"UserProfile_cardImage__3qbnY\",\"petList\":\"UserProfile_petList__38iH3\",\"buttonAdd\":\"UserProfile_buttonAdd__Vh_np\",\"petCard\":\"UserProfile_petCard__10KDW\",\"petName\":\"UserProfile_petName__38Ddc\",\"petPicture\":\"UserProfile_petPicture__-0pWN\",\"petImg\":\"UserProfile_petImg__3eiBE\",\"petContainer\":\"UserProfile_petContainer__3jMS-\",\"petDelete\":\"UserProfile_petDelete__hbYkl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddPost_container__3xsxt\",\"addPost\":\"AddPost_addPost__126eG\",\"wrapper\":\"AddPost_wrapper__186Gv\",\"textArea\":\"AddPost_textArea__-n4cK\",\"addBtn\":\"AddPost_addBtn__32zVY\",\"addImg\":\"AddPost_addImg__GLGpW\",\"inputAddImg\":\"AddPost_inputAddImg__DQqxV\",\"preview\":\"AddPost_preview__2ksev\",\"errors\":\"AddPost_errors__3Ex8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"PetsProfile_avatar__1j6Md\",\"petCard\":\"PetsProfile_petCard__1gA0u\",\"posts\":\"PetsProfile_posts__2jSfq\",\"postCard\":\"PetsProfile_postCard__1eNpa\",\"buttonAdd\":\"PetsProfile_buttonAdd__AwPvK\",\"owner_id\":\"PetsProfile_owner_id__2iPf3\",\"owner_id_img\":\"PetsProfile_owner_id_img__25jW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"PostCard_postCard__svek3\",\"cardContent\":\"PostCard_cardContent__3Qcje\",\"contentText\":\"PostCard_contentText__1v48C\",\"container\":\"PostCard_container__3cHOO\",\"slickSlide\":\"PostCard_slickSlide__1LwSt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\",\"input_dark\":\"Input_input_dark__2J9TK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"TextArea_input__1PU5S\",\"input_dark\":\"TextArea_input_dark__1vmvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltipContainer\":\"Tooltip_tooltipContainer__2KNt4\",\"tooltipBox\":\"Tooltip_tooltipBox__3XTVL\",\"visible\":\"Tooltip_visible__1Lsv1\",\"tooltipArrow\":\"Tooltip_tooltipArrow__32Ao0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blob1\":\"Blobs_blob1__NHL86\",\"blob2\":\"Blobs_blob2__2a_R_\",\"blob3\":\"Blobs_blob3__2JdYj\",\"blob4\":\"Blobs_blob4__1M4MW\",\"container\":\"Blobs_container__PsEXw\",\"wrapper\":\"Blobs_wrapper__ZFYIR\",\"background\":\"Blobs_background__RaGIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__1OXEJ\",\"btn\":\"Registration_btn__czTa9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UpdateUser_wrapper__3Tx9x\",\"input\":\"UpdateUser_input__3Z08J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\",\"btn_dark\":\"Button_btn_dark__2rmhX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MenuBar_container__EYpdn\",\"wrapper\":\"MenuBar_wrapper__12UOy\",\"menuBar\":\"MenuBar_menuBar__3voDm\",\"activeLink\":\"MenuBar_activeLink__2BC5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switchCheckbox\":\"ThemeToggle_switchCheckbox__1ovIA\",\"switch\":\"ThemeToggle_switch__qBPos\",\"slider\":\"ThemeToggle_slider__1kz0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__3EB9Y\",\"icon\":\"Modal_icon__elt47\",\"background\":\"Modal_background__27vNE\",\"inner\":\"Modal_inner__2mdon\",\"containerModal\":\"Modal_containerModal__GCwZI\",\"info\":\"Modal_info__3pS3e\",\"userInfo\":\"Modal_userInfo__2oYMP\",\"avatar\":\"Modal_avatar__2uDEV\",\"petName\":\"Modal_petName__IsQXW\",\"comments\":\"Modal_comments__3iKus\",\"comment\":\"Modal_comment__1Gynu\",\"userInfoComment\":\"Modal_userInfoComment__2Er2g\",\"text\":\"Modal_text__2-P6-\",\"time\":\"Modal_time__3red0\",\"close\":\"Modal_close__3rW_Y\",\"closeBtn\":\"Modal_closeBtn__1xWZV\",\"buttom\":\"Modal_buttom__2pU3L\",\"footerContainer\":\"Modal_footerContainer__18twv\",\"footer\":\"Modal_footer__15gFb\",\"textarea\":\"Modal_textarea__16lpD\",\"btn\":\"Modal_btn__2TiEl\",\"delete\":\"Modal_delete__3dYnh\",\"likesAndComments\":\"Modal_likesAndComments__36Pqu\",\"container\":\"Modal_container__1LvOf\",\"slick-prev\":\"Modal_slick-prev__2Taii\",\"slickSlide\":\"Modal_slickSlide__2-7Aw\",\"slick-next\":\"Modal_slick-next__2GHFy\"};","export const AboutUs = () => {\n  return (\n    <div>\n      <img src=\"/images/logo.svg\"></img>\n    </div>\n  );\n};\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\n\nconst darkTheme = {\n\ttext: \"#FFFFFF\",\n\tblackWhiteText: \"#FFFFFF\",\n  grayText: \"#FFFFFF\",\n  timeText: \"#3c3b4c\",\n  colorOfButton: \"linear-gradient(275.76deg, #7158E2 44.33%, #CD84F1 98.56%)\",\n  borderOfButton: \"1px solid #7158E2\",\n  colorOfButtonHover: \"#7158E2\",\n  colorOfTextInput: \"#7158E2\",\n  background: \"linear-gradient(270deg, #615554 0%, #BE9F96 100%, #BE9F96 100%, #7C6862 100%)\",\n\tfilter: \"brightness(0) invert(1)\",\n\tsearchBackground: \"rgba(63, 63, 63, 0.5)\",\n\tpostBackground: \"rgba(104, 100, 98, 1)\"\n};\n\nconst lightTheme = {\n\ttext: \"#383535\",\n\tblackWhiteText: \"#000000\",\n  grayText: \"#444444\",\n  timeText: \"#b63b0eb0\",\n  colorOfButton:\n    \"conic-gradient(from -3.29deg at 100% -13%, #FFA502 0deg, #FF6348 360deg)\",\n  borderOfButton: \"1px solid #FF6348\",\n  colorOfButtonHover: \"#FF7F50\",\n  colorOfTextInput: \"#FF7F50\",\n  background: \"linear-gradient(270deg, #F0B564 0%, #F4D382 100%)\",\n\tfilter: \"none\",\n\tsearchBackground: \"rgba(241, 241, 241, 0.5)\",\n\tpostBackground: \"rgba(241, 241, 241, 0.75)\"\n};\n\nexport const ThemeContext = createContext({\n  isDark: false,\n  changeIsDark: () => {},\n  theme: lightTheme,\n});\n\ninterface IProps {\n  children: ReactNode;\n}\n\nexport const ThemeProdiver = ({ children }: IProps) => {\n  const [isDark, setIsDark] = useState(\n    localStorage.getItem(\"isDark\") === \"true\"\n  );\n\n  const changeIsDark = () => {\n    setIsDark((isDark) => !isDark);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"isDark\", JSON.stringify(isDark));\n  }, [isDark]);\n\n  return (\n    <ThemeContext.Provider\n      value={{ isDark, changeIsDark, theme: isDark ? darkTheme : lightTheme }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n","export const petsFetch = async (url: string, config?: RequestInit) => {\n  const access = localStorage.getItem(\"access\");\n\n  const response = await fetch(url, {\n    ...config,\n\n    headers: access\n      ? {\n          ...config?.headers,\n          Authorization: `Bearer ${access}`,\n        }\n      : config?.headers,\n  });\n\n  if (response.ok === false) {\n    const error = await response.json();\n    const isExpired = error.detail.includes(\"expired\");\n\n    if (isExpired) {\n      const refresh = localStorage.getItem(\"refresh\");\n\n      const responseToken = await fetch(\n        \"https://api2.adoptpets.click/auth/refresh\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${refresh}`,\n          },\n          body: \"\",\n        }\n      );\n\n      if (responseToken.ok) {\n        const result = await responseToken.json();\n\n        localStorage.setItem(\"access\", result.access);\n\n        const refreshedResponse = await fetch(url, {\n          ...config,\n          headers: {\n            Authorization: `Bearer ${result.access}`,\n            ...config?.headers,\n          },\n        });\n\n        return refreshedResponse;\n      }\n    }\n  }\n\n  return response;\n};\n","import { petsFetch } from \"./helpers\";\n\nexport const getPets = async () => {\n  const response = await petsFetch(`https://api2.adoptpets.click/users/me`);\n  const result = await response.json();\n  return result;\n};\n","export const ACTIONS = {\n  ADD_PETS: \"ADD_PETS\",\n  ADD_PET: \"ADD_PET\",\n  DELETE_PET: \"DELETE_PET\",\n  ADD_POSTS: \"ADD_POSTS\",\n  ADD_POST: \"ADD_POST\",\n  DELETE_POST: \"DELETE_POST\",\n  REGISTER_FAILURE: \"REGISTER_FAILURE\",\n  REGISTER_SUCCESS: \"REGISTER_SUCCESS\",\n  LOGIN_SUCCESS: \"LOGIN_SUCCESS\",\n\tGET_USER_DATA: \"GET_USER_DATA\",\n  ADD_USER: \"ADD_USER\",\n\tLOGOUT: \"LOGOUT\",\n\tADD_HOME: \"ADD_HOME\",\n  DELETE_HOME: \"DELETE_HOME\",\n};\n","import { Dispatch } from \"redux\";\n\nimport { getPets } from \"../../services/pets\";\nimport { ACTIONS } from \"../constants\";\nimport { IPet } from \"../redusers/petsReduser\";\nimport { IState } from \"../store\";\n\nexport const addPets = (pets: IPet[], count: number) => {\n  return {\n    type: ACTIONS.ADD_PETS,\n    pets: pets,\n    count,\n  };\n};\n\nexport const fetchPets = () => {\n  return async (dispatch: Dispatch, getState: () => IState) => {\n    const {\n      petsReducer: {},\n    } = getState();\n    {\n      const result = await getPets();\n      dispatch(addPets(result.pets, result.count));\n    }\n  };\n};\n\nexport const addPet = (pet: IPet) => {\n  return {\n    type: ACTIONS.ADD_PET,\n    pet: pet,\n  };\n};\n\nexport const fetchPet = (id: string) => {\n  return async (dispatch: Dispatch) => {\n    const response = await fetch(\"https://api2.adoptpets.click/pets/\" + id);\n    const pet = await response.json();\n    dispatch(addPet(pet));\n  };\n};\n\nexport const deletePet = () => {\n  return { type: ACTIONS.DELETE_PET };\n};\n\nexport const searchPets = (search: string) => {\n  return async (dispatch: Dispatch) => {\n    const response = await fetch(``);\n    const result = await response.json();\n    dispatch(addPets(result.pets, result.count));\n  };\n};\n","import { useContext } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport styles from \"./Button.module.css\";\n\ninterface IProps {\n  children: any;\n  onClick?: () => void;\n  onClickID?: (id: string) => void;\n  onClickState?: (state: any) => void;\n  style?: any;\n}\n\nexport const Button = ({ children, onClick }: IProps) => {\n  const { theme } = useContext(ThemeContext);\n  const { isDark } = useContext(ThemeContext);\n  return (\n    <button\n      onClick={onClick}\n      style={{\n        background: theme.colorOfButton,\n        border: theme.borderOfButton,\n      }}\n      className={isDark ? `${styles.btn} ${styles.btn_dark}` : `${styles.btn}`}\n    >\n      {children}\n    </button>\n  );\n};\n","import { ChangeEventHandler, KeyboardEventHandler, useContext } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport styles from \"./Input.module.css\";\n\ninterface IProps {\n  value: string;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  onKeyDown?: KeyboardEventHandler<HTMLInputElement>;\n  type?: string;\n  label?: string;\n\terror?: string;\n\tname?: string;\n\tlist?: string;\n}\n\nexport const Input = ({\n  type = \"text\",\n  label,\n  value,\n  error,\n  onChange,\n\tonKeyDown,\n\tname, list\n  \n}: IProps) => {\n  const { theme } = useContext(ThemeContext);\n  const { isDark } = useContext(ThemeContext);\n\n  return (\n    <label className={styles.label}>\n      {\" \"}\n      {label ? <p>{label}</p> : null}\n      <input\n        type={type}\n        value={value}\n        onChange={onChange}\n        style={{\n          color: theme.colorOfTextInput,\n          border: theme.borderOfButton,\n        }}\n        className={`${styles.input} ${error ? styles.error : \"\"} ${\n          isDark ? styles.input_dark : styles.input\n        }`}\n        onKeyDown={onKeyDown}\n      />\n      {error ? <p>{error}</p> : null}\n    </label>\n  );\n};\n","import { ChangeEventHandler, KeyboardEventHandler, useContext } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport styles from \"./TextArea.module.css\";\n\ninterface IProps {\n  value: string;\n  onChange: ChangeEventHandler<HTMLTextAreaElement>;\n  onKeyDown?: KeyboardEventHandler<HTMLTextAreaElement>;\n  label?: string;\n  error?: string;\n}\n\nexport const TextArea = ({ label, value, error, onChange }: IProps) => {\n  const { theme } = useContext(ThemeContext);\n  const { isDark } = useContext(ThemeContext);\n  return (\n    <label className={styles.label}>\n      {\" \"}\n      {label ? <p>{label}</p> : null}\n      <textarea\n        value={value}\n        onChange={onChange}\n        style={{\n          color: theme.colorOfTextInput,\n          border: theme.borderOfButton,\n        }}\n        className={`${styles.input} ${error ? styles.error : \"\"} ${\n          isDark ? styles.input_dark : styles.input\n        }`}\n      />\n      {error ? <p>{error}</p> : null}\n    </label>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {  useNavigate } from \"react-router-dom\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { fetchPets } from \"../../redux/actions/petActions\";\nimport { petsFetch } from \"../../services/helpers\";\nimport { Button } from \"../Button/Button\";\nimport { Input } from \"../Input/Input\";\nimport { TextArea } from \"../TextArea/TextArea\";\nimport styles from \"./AddPet.module.css\";\n\nexport const AddPet = () => {\n  const { theme } = useContext(ThemeContext);\n  const navigate = useNavigate();\n  const [name, setName] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [species, setSpecies] = useState<string>(\"\");\n  const [sex, setSex] = useState<string>(\"\");\n  const [hasHome, setHasHome] = useState<boolean>(false);\n  const [image, setImage] = useState(\"\");\n  const [birthDate, setBirthDate] = useState<string>(\"\");\n  const [imageFile, setImageFile] = useState<Blob | null>(null);\n  const [errors, setErrors] = useState<string>();\n\n  const onLoad = (event: any) => {\n    setImageFile(event.target.files[0]);\n    const reader = new FileReader();\n    reader.readAsDataURL(event.target.files[0]);\n\n    reader.onload = (event: any) => {\n      setImage(event.target.result);\n    };\n  };\n\n  const removeImage = () => {\n    setImage(\"\");\n    setImageFile(null);\n  };\n\n  \n  const dispatch = useDispatch();\n\n  const createNewPet = () => {\n    if (imageFile && name && description && species && sex && birthDate) {\n      const formData = new FormData();\n      formData.append(\"image\", imageFile);\n      formData.append(\"name\", name);\n      formData.append(\"description\", description);\n      formData.append(\"species\", species);\n      formData.append(\"sex\", sex);\n      formData.append(\"birth_date\", birthDate);\n      formData.append(\"has_home\", JSON.stringify(hasHome));\n\n      petsFetch(\"https://api2.adoptpets.click/pets\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n        },\n        body: formData,\n\t\t}).then(() => {\n\t\t\tdispatch(fetchPets());\n\t\t}).then(() => {\n\t\t\tnavigate(\"/userProfile\");\n\t\t})\n      \n      \n    \n    } else {\n      setErrors(\"Fill in all fields and add a photo, please.\");\n    }\n  };\n\n  const { isDark } = useContext(ThemeContext);\n\n  return (\n    <>\n      <div className={styles.addPostIndex}>\n        <div className={styles.addPostWrraper}>\n          <div className={styles.addPost}>\n            <div className={styles.addText}>\n              <Input\n                type=\"text\"\n                label=\"Name\"\n                value={name}\n                onChange={(event) => setName(event.target.value)}\n              />\n\n              <div className={styles.species}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"species\"\n                    value=\"cat\"\n                    checked={species == \"cat\"}\n                    onChange={() => setSpecies(\"cat\")}\n                  />{\" \"}\n                  Cat\n                </label>\n                <br></br>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"species\"\n                    value=\"dog\"\n                    checked={species == \"dog\"}\n                    onChange={() => setSpecies(\"dog\")}\n                  />{\" \"}\n                  Dog\n                </label>\n              </div>\n\n              <div className={styles.sex}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"M\"\n                    checked={sex == \"M\"}\n                    onChange={() => setSex(\"M\")}\n                  />{\" \"}\n                  Boy\n                </label>\n                <br></br>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"F\"\n                    checked={sex == \"F\"}\n                    onChange={() => setSex(\"F\")}\n                  />{\" \"}\n                  Girl\n                </label>\n              </div>\n\n              <div className={styles.birth_date}>\n                <label className={styles.label}>\n                  Date of birth (approximately)\n                  <input\n                    type=\"date\"\n                    name=\"birth_date\"\n                    value={birthDate}\n                    onChange={(event) => setBirthDate(event.target.value)}\n                    style={{\n                      color: theme.colorOfTextInput,\n                      border: theme.borderOfButton,\n                    }}\n                    className={`${styles.input}  ${\n                      isDark ? styles.input_dark : styles.input\n                    }`}\n                  />\n                </label>\n              </div>\n\n              <div className={styles.has_home}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={hasHome}\n                    onChange={() => setHasHome(!hasHome)}\n                    className={styles.home}\n                  />{\" \"}\n                  Has home?{\" \"}\n                </label>\n                <div>\n                  {hasHome ? (\n                    <>\n                      {\" \"}\n                      {\"  \"} <img src=\"/images/homeFill.svg\"></img> Yes\n                    </>\n                  ) : (\n                    <>\n                      <img src=\"/images/home.svg\"></img> No, this pet is looking\n                      for a home.\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <TextArea\n                value={description}\n                label=\"Description\"\n                onChange={(event) => setDescription(event.target.value)}\n              />\n            </div>\n            <div className={styles.addImg}>\n              {image ? (\n                <>\n                  <img src={image} />\n                  <Button onClick={removeImage}>Remove image</Button>\n                </>\n              ) : (\n                <p style={{ color: theme.text }} className={styles.addName}>\n                  Image\n                </p>\n              )}\n\n              <div className={styles.addBtn}>\n                {image ? null : (\n                  <>\n                    <div className={styles.addImg}>\n                      <Button onClick={() => {}}> Add</Button>\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={onLoad}\n                        className={styles.inputAddImg}\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className={styles.addManeBtn}>\n            <Button onClick={createNewPet}>Add Pet</Button>\n          </div>\n          {errors &&\n          !(imageFile && name && description && species && sex && birthDate) ? (\n            <div className={styles.errors}>{errors}</div>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {  useNavigate, useParams } from \"react-router-dom\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { fetchPet } from \"../../redux/actions/petActions\";\nimport { petsFetch } from \"../../services/helpers\";\nimport { Button } from \"../Button/Button\";\nimport { TextArea } from \"../TextArea/TextArea\";\nimport styles from \"./AddPost.module.css\";\n\nexport const UploadFile = () => {\n  const [files, setFiles] = useState([\"\"]);\n  const [text, setText] = useState<string>(\"\");\n  const [preview, setPreview] = useState<string[]>([]);\n  const [errors, setErrors] = useState<string>();\n  const fileobj: any[] = [];\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const onLoad = (event: any) => {\n    setFiles(event.target.files);\n    event.preventDefault();\n    const images = event.target.files;\n    fileobj.push(images);\n    let reader;\n\n    for (var i = 0; i < fileobj[0].length; i++) {\n      reader = new FileReader();\n      reader.readAsDataURL(fileobj[0][i]);\n      reader.onload = (event: any) => {\n        preview.push(event.target.result);\n        setPreview([...preview]);\n      };\n    }\n  };\n\n  const removeImage = () => {\n    setPreview([]);\n    setFiles([\"\"]);\n  };\n\n  const createNewPost = () => {\n    if (files[0].length !== 0 && text) {\n      const formData = new FormData();\n      formData.append(\"text\", text);\n      for (let i = 0; i < files.length; i++) {\n        formData.append(`image_files`, files[i]);\n      }\n      const petId = sessionStorage.getItem(\"petId\");\n      setErrors(undefined);\n      petsFetch(`https://api2.adoptpets.click/pets/${petId}/posts`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n        },\n        body: formData,\n\t\t}).then(() => {\n\t\t\tif (petId) {\n\t\t\t\tdispatch(fetchPet(petId));\n\t\t\t}\n\t\t})\n\t\t .then(() => {\n\t\t\tnavigate(`/pet/${petId}`);\n\t\t });\n\t\t \n\t\t \n      \n    } else {\n      setErrors(\"Add text and image\");\n    }\n  };\n  const { theme } = useContext(ThemeContext);\n  return (\n    <div className={styles.container}>\n      <div\n        className={styles.addPost}\n        style={{\n          color: theme.text,\n        }}\n      >\n        Add new post\n      </div>\n      <div className={styles.wrapper}>\n        <div className={styles.left}>\n          <div className={styles.textArea}>\n            <TextArea\n              value={text}\n              label=\"Text\"\n              onChange={(event) => setText(event.target.value)}\n            />\n          </div>\n          <div className={styles.addBtn}>\n            {preview.length !== 0 ? null : (\n              <>\n                <div className={styles.addImg}>\n                  <Button onClick={() => {}}> Add</Button>\n                  <input\n                    type=\"file\"\n                    multiple\n                    onChange={onLoad}\n                    className={styles.inputAddImg}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n          {preview.length !== 0 ? (\n            <Button onClick={removeImage}>Remove image</Button>\n          ) : null}\n        </div>\n        <div className={styles.right}>\n          <div className={styles.preview}>\n            {preview.length !== 0 ? (\n              (preview || []).map((url, index) => (\n                <img\n                  src={url}\n                  alt=\"...\"\n                  key={index}\n                  style={{\n                    height: \"200px\",\n                    width: \"200px\",\n                    objectFit: \"cover\",\n                  }}\n                />\n              ))\n            ) : (\n              <div>Nothing added yet</div>\n            )}\n          </div>\n        </div>\n      </div>\n      <Button onClick={createNewPost}>Add new post</Button>\n      {errors && !(files[0].length !== 0 && text) ? (\n        <div className={styles.errors}>{errors}</div>\n      ) : null}\n    </div>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { IState } from \"../../redux/store\";\n\nexport const Confirm = () => {\n  const email = useSelector((state: IState) => state.authReducer.email);\n  const username = useSelector((state: IState) => state.authReducer.username);\n\n  return (\n    <div>\n      <h1>Registration Confirmation</h1>\n      <p>\n        Dear {username} your account with email {email} registered successfully\n      </p>\n      <p>\n        Please, <NavLink to=\"/login\">Login</NavLink>\n      </p>\n    </div>\n  );\n};\n","export const Donations = () => {\n\treturn (\n\t\t<div>\n\t\t\t<img src=\"/images/donations.png\"></img>\n</div>\n\t)\n}","import styles from \"./ThemeToggle.module.css\";\n\ninterface IProps {\n  inputChecked: boolean;\n  onChange: () => void;\n}\n\nexport const ThemeToggle = ({ inputChecked, onChange }: IProps) => {\n  return (\n    <div className={styles.switchCheckbox}>\n      <label className={styles.switch}>\n        <input type=\"checkbox\" onChange={onChange} checked={inputChecked} />\n        <span className={styles.slider}> </span>\n      </label>\n    </div>\n  );\n};\n","import styles from \"./MenuBar.module.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { ThemeToggle } from \"../ThemeToggle/ThemeToggle\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { useSelector } from \"react-redux\";\nimport { IState } from \"../../redux/store\";\nimport { Button } from \"../Button/Button\";\n\ninterface IProps {\n  closeMenuBar: () => void;\n}\n\nexport const MenuBar = ({ closeMenuBar }: IProps) => {\n  const { isDark, changeIsDark } = useContext(ThemeContext);\n  const { isLoggedIn } = useSelector((state: IState) => state.authReducer);\n  const petInHome = localStorage.getItem(\"petInHome\");\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"access\");\n    localStorage.removeItem(\"username\");\n\n    setTimeout(() => {\n      navigate(\"/\");\n      window.location.reload();\n    }, 1000);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <div className={styles.menuBar}>\n          <ul>\n            <li>\n              <ThemeToggle\n                inputChecked={isDark}\n                onChange={() => {\n                  changeIsDark();\n                }}\n              />\n\t\t\t\t\t  </li>\n\t\t\t\t\t  {isLoggedIn ? (\n              <li>\n              <NavLink to=\"/pethome\" onClick={closeMenuBar}>\n                {petInHome ? (\n                  <img src=\"/images/homeFill.svg\"></img>\n                ) : (\n                  <img src=\"/images/home.svg\"></img>\n                )}\n              </NavLink>\n            </li>\n            ) : null}\n            \n            {isLoggedIn ? (\n              <li>\n                <NavLink to=\"/userProfile\" onClick={closeMenuBar}>\n                  My Prolile\n                </NavLink>\n              </li>\n\t\t\t\t\t  ) : null}\n\t\t\t\t\t  \n\t\t\t\t\t  {isLoggedIn ? (\n              <li>\n                <NavLink to=\"/favorite\" onClick={closeMenuBar}>\n                  My favorite posts\n                </NavLink>\n              </li>\n            ) : null}\n\n            <li>\n              <NavLink to=\"/aboutUs\" onClick={closeMenuBar}>\n                About Us\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/donations\" onClick={closeMenuBar}>\n                Donations\n              </NavLink>\n            </li>\n            {isLoggedIn ? (\n              <li>\n                <Button onClick={handleLogout}>LogOut</Button>\n              </li>\n            ) : null}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { petsFetch } from \"./helpers\";\n\nexport const getPosts = async () => {\n  const response = await petsFetch(`https://api2.adoptpets.click/posts`);\n  const result = await response.json();\n  return result;\n};\n\nexport const getPostsLike = async () => {\n\tconst response = await petsFetch(`https://api2.adoptpets.click/posts/liked?offset=0&limit=100`);\n\tconst result = await response.json();\n\treturn result;\n };","import { useState } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { petsFetch } from \"../../services/helpers\";\n\nimport { getPosts, getPostsLike } from \"../../services/posts\";\nimport { ACTIONS } from \"../constants\";\nimport { IPost } from \"../redusers/postsReduser\";\nimport { IState } from \"../store\";\n\nexport const addPosts = (posts: IPost[], count: number) => {\n  return {\n    type: ACTIONS.ADD_POSTS,\n    posts: posts,\n    count,\n  };\n};\n\nexport const addPetPosts = (posts: IPost[], count: number) => {\n  return {\n    type: ACTIONS.ADD_POSTS,\n    posts: posts,\n    count,\n  };\n};\n\nexport const fetchPosts = () => {\n  return async (dispatch: Dispatch, getState: () => IState) => {\n    const {\n      postsReducer: {},\n    } = getState();\n    {\n      const result = await getPosts();\n      dispatch(addPosts(result, result.count));\n    }\n  };\n};\n\nexport const fetchPostsLike = () => {\n\treturn async (dispatch: Dispatch, getState: () => IState) => {\n\t  const {\n\t\t postsReducer: {},\n\t  } = getState();\n\t  {\n\t\t const result = await getPostsLike();\n\t\t dispatch(addPosts(result, result.count));\n\t  }\n\t};\n };\n\nexport const fetchPetPost = (id: string) => {\n  return async (dispatch: Dispatch) => {\n    const response = await petsFetch(\n      `https://api2.adoptpets.click/pets/${id}/posts`\n    );\n    const petPosts = await response.json();\n    dispatch(addPetPosts(petPosts, petPosts.count));\n  };\n};\n\nexport const addPost = (post: IPost) => {\n  return {\n    type: ACTIONS.ADD_POST,\n    post: post,\n  };\n};\n\nexport const fetchPost = (id: string) => {\n  return async (dispatch: Dispatch) => {\n    const response = await petsFetch(\"https://api2.adoptpets.click/posts/\" + id);\n    const post = await response.json();\n    dispatch(addPost(post));\n  };\n};\n\nexport const deletePost = () => {\n  return { type: ACTIONS.DELETE_POST };\n};\n\nexport const searchPosts = (\n  species: string,\n  gte_date: string,\n  sex: string,\n  country: string,\n  city: string,\n  has_home: boolean,\n\tisLoggedIn: boolean,\n\thasHomeStr:string\n) => {\n  let url = `https://api2.adoptpets.click/search?offset=0&limit=100`;\n  {species !== \"\" ? (url = url + `&species=${species}`) : (url = url + \"\");}\n\t{ sex !== \"\" ? (url = url + `&sex=${sex}`) : (url = url + \"\"); }\n\t{ gte_date !== \"\" ? (url = url + `&gte_date=${gte_date}`) : (url = url + \"\"); }\n\t{ country !== \"\" ? (url = url + `&country=${country}`) : (url = url + \"\"); }\n\t{ city !== \"\" ? (url = url + `&city=${city}`) : (url = url + \"\"); }\n\t{ hasHomeStr !== \"\" ? (url = url + `&has_home=${has_home}`) : (url = url + \"\"); }\n  if (isLoggedIn) {\n    return async (dispatch: Dispatch, getState: () => IState) => {\n      const {\n        postsReducer: {},\n      } = getState();\n      {\n        const response = await petsFetch(url);\n        const result = await response.json();\n        dispatch(addPosts(result, result.count));\n      }\n    };\n  } else {\n    return async (dispatch: Dispatch, getState: () => IState) => {\n      const {\n        postsReducer: {},\n      } = getState();\n      {\n        const response = await fetch(url);\n        const result = await response.json();\n        dispatch(addPosts(result, result.count));\n      }\n    };\n  }\n};\n\n// `https://api2.adoptpets.click/search?offset=0&limit=100&species=${species}&gte_date=${gte_date}&sex=${sex}&country=${country}&city=${city}&has_home=${has_home}`\n","import styles from \"./Header.module.css\";\n\nimport { useCallback, useContext, useState } from \"react\";\nimport { Button } from \"../Button/Button\";\nimport { MenuBar } from \"../MenuBar/MenuBar\";\nimport { fetchPosts } from \"../../redux/actions/postsActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { ThemeToggle } from \"../ThemeToggle/ThemeToggle\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { IState } from \"../../redux/store\";\n\nexport const Header = () => {\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  const isLog = localStorage.getItem(\"access\");\n  const { isLoggedIn } = useSelector((state: IState) => state.authReducer);\n  const [isActive, setIsActive] = useState(false);\n  const dispatch = useDispatch();\n\tconst { isDark, changeIsDark } = useContext(ThemeContext);\n\tconst petInHome = localStorage.getItem(\"petInHome\");\n\n  const closeMenuBar = useCallback(() => {\n    setIsActive(false);\n  }, [setIsActive]);\n\t\n  const handleLogout = () => {\n\tlocalStorage.removeItem(\"access\");\n\tlocalStorage.removeItem(\"username\");\n\n\tsetTimeout(() => {\n\t  navigate(\"/\");\n\t  window.location.reload();\n\t}, 1000);\n };\n\n  return (\n    <>\n      <div className={styles.header}>\n        <div className={styles.headerBlock}>\n          <div className={styles.logoandmenu}>\n            <div\n              className={styles.logoBlock}\n              onClick={() => {\n                dispatch(fetchPosts());\n                navigate(\"/\");\n              }}\n            >\n              <img src=\"/images/logo.svg\" alt=\"logo\" className={styles.logo} />\n              <h4>adoptpets</h4>\n            </div>\n          </div>\n        </div>\n        <div className={styles.menuUser}>\n          <div className={styles.navlink}>\n\t\t\t <NavLink to=\"/aboutUs\" >\n                About Us\n              </NavLink>\n\t\t\t\t  </div>\n\t\t\t\t  <div className={styles.navlink}>\n\t\t\t <NavLink to=\"/donations\" >\n\t\t\t Donations\n              </NavLink>\n\t\t\t\t  </div>\n\t\t\t\t  {isLog ? (\n              \n              <NavLink to=\"/pethome\" >\n                {petInHome ? (\n                  <img className={styles.home} src=\"/images/homeFill.svg\"></img>\n                ) : (\n                  <img className={styles.home} src=\"/images/home.svg\"></img>\n                )}\n              </NavLink>\n            \n\t\t\t\t  ) : null}\n\t\t\t\t  {isLog ? (\n              \n                <NavLink to=\"/favorite\" >\n                  <img className={styles.favor} src=\"/images/favor.svg\"></img>\n                </NavLink>\n              \n            ) : null}\n          <div className={styles.user}>\n            {isLog ? (\n              <div\n                className={styles.userInfo}\n                onClick={() => {\n                  navigate(\"/userProfile\");\n                }}\n              >\n                <img\n                  src=\"/images/user.svg\"\n                  alt=\"user\"\n                  className={styles.userImg}\n                />\n\t\t\t\t\t\t\t  <div className={styles.userName}>{username}</div>\n\t\t\t\t\t\t\t  <img className={styles.logout} src=\"/images/logout.svg\" onClick={handleLogout}></img>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t  \n            ) : (\n              <>\n                <button className={styles.buttonLogin}\n                  onClick={() => {\n                    navigate(\"/login\");\n                  }}\n                >\n                  Login\n                </button>\n                \n              </>\n            )}\n          </div>\n          <div>\n            <ThemeToggle\n              inputChecked={isDark}\n              onChange={() => {\n                changeIsDark();\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      {isActive ? <MenuBar closeMenuBar={closeMenuBar} /> : null}\n    </>\n  );\n};\n","const _emailLanguageRegExp = /^[A-z._@\\s\\-\\d]+$/;\nconst _emailRegExp = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\nconst _passwordLanguageRegExp = /^[A-z\\d]+$/;\nconst _passwordRegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{0,}$/;\n\nexport const REQUIRED_FIELD = \"Заполните обязательные поля\";\nconst WRONG_MIN_LENGTH = (min: number) =>\n  `Ограничение на ввод менее ${min} символов`;\nconst WRONG_MAX_LENGTH = (max: number) =>\n  `Ограничение на ввод более ${max} символов`;\nconst WRONG_NAME = \"Имя должно быть не больше 60 символов\";\nconst ENTER_EMAIL = \"Введите почту\";\nconst WRONG_EMAIL_LANGUAGE = \"Почта должна содержать только латинские буквы\";\nconst WRONG_EMAIL = \"Почта должна содержать специальный символ @ и домен\";\nconst ENTER_PASSWORD = \"Введите пароль\";\nconst ENTER_REPEATED_PASSWORD = \"Повторите пароль\";\nconst WRONG_PASSWORD_LANGUAGE =\n  \"Пароль должен состоять только из цифр и латинских букв\";\nconst WRONG_PASSWORD_FORMAT =\n  \"Пароль должен содержать не менее 1 цифры, 1 прописной и 1 строчной буквы\";\nconst WRONG_PASSWORD_LENGTH =\n  \"Пароль должен содержать не менее 8 символов и не более 30 символов\";\nconst WRONG_REPEATED_PASSWORD = \"Пароли не совпадают\";\n\nconst NOT_ERROR = \"\";\nclass ValidationService {\n  public validateRequired(value: string): string {\n    if (value === \"\") {\n      return REQUIRED_FIELD;\n    }\n\n    return NOT_ERROR;\n  }\n\n  public validateLength(value: string, max?: number, min?: number): string {\n    if (!value) {\n      return REQUIRED_FIELD;\n    }\n\n    if (max !== undefined) {\n      return value.length > max ? WRONG_MAX_LENGTH(max) : NOT_ERROR;\n    }\n\n    if (min !== undefined) {\n      return value.length < min ? WRONG_MIN_LENGTH(min) : NOT_ERROR;\n    }\n\n    return NOT_ERROR;\n  }\n\n  public validateName(name: string): string {\n    if (!name) {\n      return REQUIRED_FIELD;\n    }\n\n    if (name.length > 60) {\n      return WRONG_NAME;\n    }\n\n    return NOT_ERROR;\n  }\n\n  public validateEmail(email: string): string {\n    if (!email) {\n      return ENTER_EMAIL;\n    }\n\n    if (_emailLanguageRegExp.test(email) === false) {\n      return WRONG_EMAIL_LANGUAGE;\n    }\n\n    if (_emailRegExp.test(email) === false) {\n      return WRONG_EMAIL;\n    }\n\n    return NOT_ERROR;\n  }\n\n  public validatePassword(password: string): string {\n    if (!password) {\n      return ENTER_PASSWORD;\n    }\n\n    if (!_passwordLanguageRegExp.test(password)) {\n      return WRONG_PASSWORD_LANGUAGE;\n    }\n\n    if (!_passwordRegExp.test(password)) {\n      return WRONG_PASSWORD_FORMAT;\n    }\n\n    if (password.length < 8) {\n      return WRONG_PASSWORD_LENGTH;\n    }\n\n    if (password.length > 30) {\n      return WRONG_PASSWORD_LENGTH;\n    }\n\n    return NOT_ERROR;\n  }\n\n  public validateRepeatedPassword(\n    password: string,\n    repeatedPassword: string\n  ): string {\n    if (!password) {\n      return NOT_ERROR;\n    }\n\n    if (!repeatedPassword) {\n      return ENTER_REPEATED_PASSWORD;\n    }\n\n    if (password !== repeatedPassword) {\n      return WRONG_REPEATED_PASSWORD;\n    }\n\n    return NOT_ERROR;\n  }\n}\n\nexport const validationService = new ValidationService();\n","import { petsFetch } from \"./helpers\";\n\nexport const registerUser = async (\n  username: string,\n  email: string,\n  password: string\n) => {\n  const response = await fetch(\"https://api2.adoptpets.click/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ username, email, password }),\n  });\n\n  const result = await response.json();\n\n  if (response.ok === false) {\n    throw result;\n  }\n\n  return result;\n};\n\nexport const loginUser = async (username: string, password: string) => {\n  const response = await fetch(\"https://api2.adoptpets.click/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ username, password }),\n  });\n  const result = await response.json();\n\n  if (response.ok === false) {\n    throw result;\n  }\n  return result;\n};\n\nexport const getProfile = async () => {\n  const response = await petsFetch(\"https://api2.adoptpets.click/users/me\");\n\n  if (response.ok) {\n    const result = await response.json();\n    return result;\n  }\n};\n","import { petsFetch } from \"./helpers\";\n\nexport const getUser = async () => {\n  const response = await petsFetch(`https://api2.adoptpets.click/users/me`);\n  const result = await response.json();\n  return result;\n};\n\nexport const getUserId = async () => {\n\tconst response = await petsFetch(`https://api2.adoptpets.click/users/`);\n\tconst result = await response.json();\n\treturn result;\n };\n\n","import { Dispatch } from \"redux\";\nimport { getProfile, loginUser, registerUser } from \"../../services/auth\";\nimport { getUser } from \"../../services/user\";\nimport { ACTIONS } from \"../constants\";\nimport { IState } from \"../store\";\ninterface IRegisterData {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport const userData = () => {\n  return async (dispatch: Dispatch, getState: () => IState) => {\n    const {\n      petsReducer: {},\n    } = getState();\n    {\n      const result = await getUser();\n      dispatch(getUserData(result));\n    }\n  };\n};\n\nconst getUserData = (profile: IProfile) => {\n  return {\n    type: ACTIONS.GET_USER_DATA,\n    ...profile,\n  };\n};\n\n\n\nexport const register = ({ username, email, password }: IRegisterData) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const result = await registerUser(username, email, password);\n      dispatch(registerSuccess(result));\n    } catch (error: any) {\n      dispatch(registerFailure(error));\n    }\n  };\n};\n\nconst registerFailure = (error: any) => {\n  return {\n    type: ACTIONS.REGISTER_FAILURE,\n    error: error,\n  };\n};\n\ninterface IProfile {\n  email: string;\n  username: string;\n  id: number;\n  country: string;\n  city: string;\n  address: string;\n  phone: string;\n}\n\n\n\nconst registerSuccess = (profile: IProfile) => {\n  return {\n    type: ACTIONS.REGISTER_SUCCESS,\n    ...profile,\n  };\n};\n\nconst loginSuccess = (profile: IProfile) => {\n  return {\n    type: ACTIONS.LOGIN_SUCCESS,\n    ...profile,\n  };\n};\n\nexport const login = (username: string, password: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const { access, refresh } = await loginUser(username, password);\n      localStorage.setItem(\"access\", access);\n      localStorage.setItem(\"refresh\", refresh);\n      localStorage.setItem(\"username\", username);\n      const profile = await getProfile();\n      dispatch(loginSuccess(profile));\n    } catch (error) {\n      dispatch(registerFailure(error));\n    }\n  };\n};\n\nexport const init = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const access = localStorage.getItem(\"access\");\n\n      if (access) {\n        const profile = await getProfile();\n        if (profile) {\n          dispatch(loginSuccess(profile));\n        }\n      }\n    } catch (error) {}\n  };\n};\n","\n\nimport { Input } from \"../Input/Input\";\nimport { Button } from \"../Button/Button\";\n\nimport styles from \"./Login.module.css\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { validationService } from \"../../services/validation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../redux/actions/authActions\";\nimport { IState } from \"../../redux/store\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const error = useSelector((state: IState) => state.authReducer.error);\n  const navigate = useNavigate();\n\n  const isLoggedIn = useSelector(\n    (state: IState) => state.authReducer.isLoggedIn\n  );\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate(\"/\");\n      window.location.reload();\n    }\n  }, [isLoggedIn]);\n\n  const onChangeUsername = useCallback((event) => {\n    const value = event.target.value;\n    setUsername(value);\n\n    const error = validationService.validateName(value);\n\n    setErrors((errors) => ({ ...errors, username: error }));\n  }, []);\n\n  const onChangePassword = useCallback((event) => {\n    setPassword(event.target.value);\n  }, []);\n\n  const onClick = () => {\n    const errors = {\n      username: validationService.validateName(username),\n      password: validationService.validatePassword(password),\n    };\n\n    setErrors(errors);\n\n    const values = Object.values(errors);\n    const isValid = values.every((value) => value === \"\");\n\n    if (isValid) {\n      dispatch(login(username, password));\n    }\n  };\n\n  const errorValues = error ? Object.values(error).flat() : \"\";\n\n  return (\n    <div className={styles.login}>\n      <div className={styles.mainForm}>\n        <div className={styles.title}></div>\n\n        <div className={styles.form}>\n          <Input\n            type=\"username\"\n            label=\"Username\"\n            onChange={onChangeUsername}\n            value={username}\n            error={errors.username}\n          />\n          <Input\n            type=\"password\"\n            label=\"Password\"\n            onChange={onChangePassword}\n            value={password}\n            error={errors.password}\n          />\n          <p>{errorValues}</p>\n          <Button onClick={onClick}>Login</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import styles from \"./Modal.module.css\";\n\nexport interface IComment {\n  text: string;\n  id: string;\n  time: Date;\n  owner_id: number;\n  post_id: string;\n\tusername: string;\n\tonClick?: () => void;\n\tchildren?: any\n}\n\nexport const Comments = ({\n  owner_id,\n  text,\n  id,\n  time,\n  post_id,\n\tusername,\n\tonClick,\n\tchildren\n}: IComment) => {\n  return (\n    <div className={styles.comment}>\n      <div>\n        <div className={styles.userInfoComment}>\n          <div className={styles.petName}>{username}</div>\n\t\t\t\t  <div className={styles.text}>{text}</div>\n\t\t\t\t  \n\t\t\t\t  <div className={styles.delete}>{children}</div>\n        </div>\n        <div className={styles.time}>\n          {time.toString().split(\"T\").join(\"  \").split(\".\")[0]}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ChangeEventHandler, useEffect, useState } from \"react\";\nimport styles from \"./Modal.module.css\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IState } from \"../../redux/store\";\nimport { deletePost, fetchPost } from \"../../redux/actions/postsActions\";\nimport { Comments } from \"./Comments\";\nimport { petsFetch } from \"../../services/helpers\";\nimport { useNavigate } from \"react-router-dom\";\nimport { stringify } from \"querystring\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport const Modal = () => {\n  const navigate = useNavigate();\n\n  const { postId } = useParams();\n  const dispatch = useDispatch();\n  const post = useSelector((state: IState) => state.postsReducer.post);\n  const comments = useSelector(\n    (state: IState) => state.postsReducer.post.comments\n  );\n  const id = useSelector((state: IState) => state.authReducer.id);\n  const images = useSelector((state: IState) => state.postsReducer.post.images);\n\n  useEffect(() => {\n    if (postId) {\n      dispatch(fetchPost(postId));\n    }\n    document.body.classList.add(\"modalShow\");\n    return () => {\n      dispatch(deletePost());\n    };\n  }, []);\n\n  function onDismiss() {\n    navigate(-1);\n    document.body.classList.remove(\"modalShow\");\n  }\n\n  const [textComment, setTextComment] = useState<string>(\"\");\n  const post_id = Number(postId);\n  const addComment = () => {\n    if (id !== 0) {\n      if (textComment !== \"\") {\n        petsFetch(\"https://api2.adoptpets.click/comments\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ text: textComment, owner_id: id, post_id }),\n        }).then(() => {\n          setTextComment(\"\");\n          if (postId) {\n            dispatch(fetchPost(postId));\n          }\n        });\n      }\n    } else {\n      alert(\"Login, please\");\n      setTextComment(\"\");\n    }\n  };\n\n  const like = (id: string) => {\n    petsFetch(`https://api2.adoptpets.click/posts/${id}/like`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    }).then(() => {\n      if (postId) {\n        dispatch(fetchPost(postId));\n      }\n    });\n  };\n\n  const likeDelete = (id: string) => {\n    petsFetch(`https://api2.adoptpets.click/posts/${id}/like`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    }).then(() => {\n      if (postId) {\n        dispatch(fetchPost(postId));\n      }\n    });\n  };\n\n  const deleteComment = (id: string) => {\n    petsFetch(`https://api2.adoptpets.click/comments/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    }).then(() => {\n      if (postId) {\n        dispatch(fetchPost(postId));\n      }\n    });\n  };\n  const settings = {\n    dots: true,\n    adaptiveHeight: true,\n    variableWidth: true,\n  };\n\n  const sliders = () => {\n    return post.images.map((data) => {\n      return (\n        <div key={data} className={styles.slickSlide}>\n          <img alt=\"image\" src={data} />\n        </div>\n      );\n    });\n  };\n\n  return post ? (\n    <>\n      <div className={styles.wrapper}>\n        <div className={styles.background} onClick={onDismiss}></div>\n        <div className={styles.inner}>\n          <div className={styles.containerModal}>\n            <div className={styles.container}>\n              <Slider {...settings}>{sliders()}</Slider>\n            </div>\n\n            <div className={styles.info}>\n              <div className={styles.userInfo}>\n                <img src={post.avatar} className={styles.avatar}></img>\n                <div className={styles.petName}>{post.name}</div>\n              </div>\n              <div className={styles.comments}>\n                <div className={styles.comment}>\n                  <div className={styles.userInfoComment}>\n                    <div className={styles.petName}>{post.name}</div>\n                    <div className={styles.text}>{post.text}</div>\n                  </div>\n                  <div className={styles.time}>\n                    {post.time.toString().split(\"T\").join(\"  \").split(\".\")[0]}\n                  </div>\n                </div>\n                {comments.map((item) => (\n                  <Comments\n                    text={item.text}\n                    id={item.id}\n                    time={item.time}\n                    owner_id={item.owner_id}\n                    post_id={item.post_id}\n                    username={item.username}\n                  >\n                    {\" \"}\n                    {id === item.owner_id ? (\n                      <div\n                        onClick={() => {\n                          deleteComment(item.id);\n                        }}\n                        style={{\n                          color: \"grey\",\n                          fontSize: \"12px\",\n                          cursor: \"pointer\",\n                        }}\n                      >\n                        {\" \"}\n                        Delete{\" \"}\n                      </div>\n                    ) : null}\n                  </Comments>\n                ))}\n              </div>\n              <div className={styles.buttom}>\n                <div className={styles.likesAndComments}>\n                  <div className={styles.icon}>\n                    {post.liked ? (\n                      <img\n                        onClick={() => {\n                          likeDelete(post.id);\n                        }}\n                        src=\"/images/liked.svg\"\n                      ></img>\n                    ) : (\n                      <img\n                        onClick={() => {\n                          like(post.id);\n                        }}\n                        src=\"/images/like.svg\"\n                      ></img>\n                    )}\n                    {post.likes_count}\n                  </div>\n                  <div className={styles.icon}>\n                    <img src=\"/images/comment.svg\"></img> {post.comments_count}\n                  </div>\n                </div>\n                <div className={styles.footerContainer}>\n                  <div className={styles.footer}>\n                    <div className={styles.textarea}>\n                      <textarea\n                        placeholder=\"Add comment...\"\n                        value={textComment}\n                        onChange={(event) => setTextComment(event.target.value)}\n                      />\n                    </div>\n                    <div className={styles.btn}>\n                      <button onClick={addComment}>Publish</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.close}>\n            <div onClick={onDismiss} className={styles.closeBtn}>\n              <img src=\"/images/close.svg\"></img>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  ) : (\n    <div>preloader</div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchPet } from \"../../redux/actions/petActions\";\nimport { IState } from \"../../redux/store\";\nimport { Button } from \"../Button/Button\";\n\nexport const PetHome = () => {\n\t\n\t\n\tconst pet = useSelector((state: IState) => state.petsReducer.pet);\n\tconst dispatch = useDispatch();\n\n\tconst petInHome = localStorage.getItem(\"petInHome\");\n\tconsole.log(petInHome)\n\n\tuseEffect(() => {\n\t\tif (petInHome) {\n\t\t\tdispatch(fetchPet(petInHome));\n\t\t}\n\t}, []);\n\t\n\n\t\n\t\n\tconst deletePet = () => {\n\t\tlocalStorage.removeItem(\"petInHome\");\n\t\twindow.location.reload()\n\t}\n\n\treturn pet.name ? (\n\t\t<>\n\t\t<h3>{pet.name}</h3>\n\t\t\t<img src={pet.image} style={{width: \"300px\", height: \"300px\", objectFit: \"cover\"}}></img>\n\t\t\t<Button onClick={deletePet}>delete pet</Button>\n\t\t</>\n\t\t\n\t) : (<>\n\t<h3>Not pets in home</h3>\n\t\t</>)\n\t\n}","import { useContext } from \"react\";\nimport styles from \"./PostCard.module.css\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport interface IPostCard {\n  id: string;\n  comments?: [];\n  owner_id: number;\n  images: string[];\n  text: string;\n  time: Date;\n\tonClick?: () => void;\n\tonClickNav?: () => void;\n\tstate?: {\n\t\tbackgroundLocation: any;\n  }\n}\n\n\n\nexport const PostCard = ({\n  id,\n  owner_id,\n  images,\n  onClick,\n  text,\n\ttime,\n\tonClickNav,\n\tstate,\n}: IPostCard) => {\n\n\tconst style = {\n\t\thoverStyle: {\n\t\t  \n\t\t  '&:hover': { backgroundColor: \"white\" },\n\t\t}\n\t };\n\t\n\tconst { theme } = useContext(ThemeContext);\n\n\tconst settings = {\n\t\tdots: true,\n\t\tarrows: false,\n\t\tadaptiveHeight: true,\n\t\tvariableWidth: true,\n\t };\n  \n\t const sliders = () => {\n\t\treturn images.map((data) => {\n\t\t  return (\n\t\t\t <div key={data} className={styles.slickSlide}>\n\t\t\t\t<img alt=\"image\" src={data} />\n\t\t\t </div>\n\t\t  );\n\t\t});\n\t };\n\t\n\n  return (\n    <div className={styles.postCard} onClick={onClick}>\n\t\t  <div className={styles.cardImage} >\n\t\t  <div className={styles.container}>\n              <Slider {...settings}>{sliders()}</Slider>\n            </div>\n\t\t\t  {/* <SimpleImageSlider\n          width={365}\n          height={365}\n          images={images}\n          showBullets={images.length !== 1 ? true : false}\n\t\t\tshowNavs={false}\n\t\t\t\t  onClickNav={()=>onClickNav}\n        /> */}\n      </div>\n\n      <div className={styles.cardContent}>\n        <div\n          className={styles.contentText}\n          style={{\n            color: theme.grayText,\n          }}\n        >\n          {text} \n        </div>\n        {/* <p\n          className={styles.contentDate}\n          style={{\n            color: theme.timeText,\n          }}\n        >\n          {time.toString().split(\"T\").join(\"  \").split(\".\")[0]}\n        </p> */}\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport styles from \"./Tooltip.module.css\"\n\ninterface IProps {\n\tchildren: any;\n\ttext: string;\n }\n\nexport const Tooltip = ( { children, text }: IProps ) => {\n\tconst [show, setShow] = useState(false);\n \n\treturn (\n\t  <div className={styles.tooltipContainer}>\n\t\t <div className={show ? `${styles.tooltipBox} ${styles. visible}` : `${styles.tooltipBox}`}>\n\t\t\t{text}\n\t\t\t<span className={styles.tooltipArrow} />\n\t\t </div>\n\t\t <div\n\t\t\tonMouseEnter={() => setShow(true)}\n\t\t\tonMouseLeave={() => setShow(false)}\n\t\t\t\n\t\t >\n\t\t\t{children}\n\t\t </div>\n\t  </div>\n\t);\n };","import { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { addSyntheticLeadingComment } from \"typescript\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\nimport { deletePet, fetchPet } from \"../../redux/actions/petActions\";\nimport { fetchPetPost, fetchPost } from \"../../redux/actions/postsActions\";\nimport { IState } from \"../../redux/store\";\nimport { petsFetch } from \"../../services/helpers\";\n\nimport { PostCard } from \"../Post/PostCard\";\nimport { Tooltip } from \"../Tooltip/Tooltip\";\nimport styles from \"./PetsProfile.module.css\";\n\nexport const Pet = () => {\n  const navigate = useNavigate();\n  const { petId } = useParams();\n  const dispatch = useDispatch();\n  const { theme } = useContext(ThemeContext);\n  const id = useSelector((state: IState) => state.authReducer.id);\n  const pet = useSelector((state: IState) => state.petsReducer.pet);\n  const posts = useSelector((state: IState) => state.postsReducer.posts);\n\n  let location = useLocation();\n  let state = location.state as { backgroundLocation?: Location };\nconsole.log(petId)\n  \nconst addHome = (id: number) => {\n\tconst petId = id.toString()\n\tlocalStorage.setItem(\"petInHome\", petId)\n}\n\n  const deletePostId = (id: string) => {\n    petsFetch(`https://api2.adoptpets.click/posts/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    }).then(() => {\n      if (petId) {\n        dispatch(fetchPetPost(petId));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (petId) {\n      dispatch(fetchPet(petId));\n      sessionStorage.setItem(\"petId\", petId);\n    }\n    return () => {\n      dispatch(deletePet());\n    };\n  }, []);\n\n  useEffect(() => {\n    if (petId) {\n      dispatch(fetchPetPost(petId));\n    }\n  }, []);\n\n  return pet ? (\n    <>\n      <div\n        style={{\n          color: theme.text,\n        }}\n      >\n        <div>\n          <h3>{pet.name}</h3>\n          <img src={pet.image} className={styles.avatar}></img>\n          <div className={styles.petCard}>\n            <div> Cat or dog: {pet.species}</div>\n            <div>\n              {\" \"}\n              Boy or girl:{\" \"}\n              {pet.sex === \"M\" ? (\n                <>\n                  <img src=\"/images/man.svg\"></img> <span>boy</span>\n                </>\n              ) : (\n                <>\n                  <img src=\"/images/woman.svg\"></img>\n                  <span>girl</span>\n                </>\n              )}\n            </div>\n            <div>Date of birth (approximately) : {pet.birth_date}</div>\n            <div>\n              Does the pet have a home?{\" \"}\n              {pet.has_home === true ? (\n                <>\n                  {\" \"}\n                  <img src=\"/images/homeFill.svg\"></img> <span>Yes</span>\n                </>\n              ) : (\n                <>\n                  <img src=\"/images/home.svg\"></img>{\" \"}\n                  <span>No, this pet is looking for a home.</span>\n                </>\n              )}\n            </div>\n            <div> About pet: {pet.description}</div>\n            <div> Country: {pet.country}</div>\n            <div> City: {pet.city}</div>\n            {id !== pet.owner_id ? (\n              <div className={styles.owner_id}>\n                <p>Pet owner: </p>\n                <div>\n                  <Tooltip text=\"Go to user's page\">\n                    <img\n                      src=\"/images/user.svg\"\n                      onClick={() => {\n                        navigate(\"/users/\" + pet.owner_id);\n                      }}\n                      className={styles.owner_id_img}\n                    ></img>\n                  </Tooltip>\n                </div>\n              </div>\n            ) : null}\n\n            {id !== pet.owner_id && !pet.has_home ? (\n              <div className={styles.owner_id}>\n                <p>Add pet to home </p>\n                <img\n                  src=\"/images/ph.svg\"\n                  onClick={() => {\n\t\t\t\t\t\t\taddHome(pet.id);\n\t\t\t\t\t\t }}\n                  className={styles.owner_id_img}\n                ></img>\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        <div>\n          {id === pet.owner_id ? (\n            <div>\n            \t<Tooltip text=\"Add new post\">\n\t            \t<img\n\t\t              src=\"/images/add.svg\"\n\t\t              onClick={() => {\n\t\t                navigate(\"/addpost\");\n\t\t              }}\n\t\t              className={styles.buttonAdd}\n\t\t            ></img>\n\t            </Tooltip>\n            </div>\n          ) : null}\n\n          {posts.map ? (\n            <>\n              <div className={styles.posts}>\n                {posts.map((item) => (\n                  <div className={styles.postCard}>\n                    {id === pet.owner_id ? (\n                      <div\n                        onClick={() => {\n                          deletePostId(item.id);\n                        }}\n                      >\n                        x\n                      </div>\n                    ) : null}\n                    <Link\n                      key={item.id}\n                      to={`/img/${item.id}`}\n                      state={{ backgroundLocation: location }}\n                    >\n                      <PostCard\n                        key={item.id + Math.random().toString(16).slice(2)}\n                        images={item.images}\n                        owner_id={item.owner_id}\n                        text={item.text}\n                        time={item.time}\n                        id={item.id}\n                      />\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </>\n          ) : (\n            <div className={styles.noPostsTitle}>NO posts...</div>\n          )}\n        </div>\n      </div>\n    </>\n  ) : (\n    <div></div>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { Link,  useLocation, useNavigate } from \"react-router-dom\";\nimport { PostCard } from \"../Post/PostCard\";\nimport styles from \"./PostList.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IState } from \"../../redux/store\";\nimport {\n\n  fetchPostsLike,\n\n} from \"../../redux/actions/postsActions\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\n\nexport const FavoritePosts = () => {\n  \n\tconst dispatch = useDispatch();\n\tlet location = useLocation();\n\tlet state = location.state as { backgroundLocation?: Location };\n\tconst navigate = useNavigate();\n  const posts = useSelector((state: IState) => state.postsReducer.posts);\nconst [postsArr, setPostsArr]=useState(posts)\n\t\n  useEffect(() => {\n\t  dispatch(fetchPostsLike());\n\t  setPostsArr(posts)\n  }, [posts]);\n\n  const { theme } = useContext(ThemeContext);\n  return (\n    <>\n      <div className={styles.allPosts}>\n        {posts ? (\n          <>\n            <div className={styles.postList}>\n              {posts.map((item) => (\n                <div className={styles.group} style={{\n\t\t\t\t\t\tbackgroundColor: theme.postBackground,\n\t\t\t\t\t }}>\n                  <div className={styles.petInfo}>\n                    <img\n                      src={item.avatar}\n                      className={styles.avatar}\n                      onClick={() => {\n                        navigate(\"/pet/\" + item.owner_id);\n                      }}\n                    ></img>\n                    <div\n                      onClick={() => {\n                        navigate(\"/pet/\" + item.owner_id);\n                      }}\n                      className={styles.petName}\n                      style={{\n                        color: theme.grayText,\n                      }}\n                    >\n                      {item.name}\n                    </div>\n                  </div>\n\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t  <Link\n\t\t\t\t\t\t\t\t  key={item.id}\n\t\t\t\t\t\t\t\t  to={`/img/${item.id}`}\n\t\t\t\t\t\t\t\t  state={{ backgroundLocation: location }}\n\t\t\t\t\t\t\t  >\n\t\t\t\t\t\t\t\t  <PostCard\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t  \n                      images={item.images}\n                      owner_id={item.owner_id}\n                      text={item.text}\n                      time={item.time}\n                      id={item.id}\n                      \n                     \n                    />\n\t\t\t\t\t\t\t  </Link>\n                    \n                  </div>\n                </div>\n              ))}\n            </div>\n          </>\n        ) : (\n          <div className={styles.noPostsTitle}>NO posts...</div>\n        )}\n      </div>\n\n      \n    </>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { searchPosts } from \"../../redux/actions/postsActions\";\nimport { Button } from \"../Button/Button\";\nimport styles from \"./Search.module.css\";\nimport { Country, State, City } from \"country-state-city\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\ninterface IProps {\n  closeSearchBar?: () => void;\n  inputChecked?: boolean;\n  onChange?: () => void;\n  onClick?: () => void;\n  openSearchBar?: () => void;\n\tisVisible: boolean;\n\tonChangeCountry: (event: any) => void;\n\tonChangeSpecies: (event: any) => void;\n\tonChangeGender: (event: any) => void;\n\tonChangeDate: (event: any) => void;\n\tonChangeHasHome: (event: any) => void;\n\tonChangeCity: (event: any) => void;\n}\n\nexport const SearchBar = ({\n  closeSearchBar,\n  inputChecked,\n  onChange,\n  onClick,\n  openSearchBar,\n\tisVisible,\n\tonChangeCountry,\n\tonChangeSpecies,\n\tonChangeGender,\n\tonChangeDate,\n\tonChangeHasHome,\n\tonChangeCity\n}: IProps) => {\n \n  const [species, setSpecies] = useState<string>(\"\");\n  const [sex, setSex] = useState<string>(\"\");\n  const [gte_date, setGteDate] = useState(\"1900-04-03\");\n  const [hasHomeStr, setHasHomeStr] = useState<string>(\"\");\n  let has_home: boolean | null;\n  {\n    hasHomeStr === \"true\" ? (has_home = true) : (has_home = false);\n  }\n  const countries = Country.getAllCountries();\n\n  const [country, setCountry] = useState(\"\");\n  const [states, setStates] = useState(\"\");\n  const [cities, setCities] = useState(\"\");\n  const { theme } = useContext(ThemeContext);\n  const { isDark } = useContext(ThemeContext);\n  return (\n    <>\n      <div className={styles.searchContaiter} onClick={openSearchBar}>\n\t\t\t  <img src={isDark ? \"/images/filter2.svg\" : \"/images/filter.svg\"} alt=\"filter\" \n\t\t\t  />\n        <p style={{\n        color: theme.blackWhiteText\n      }}>Filter</p>\n      </div>\n      {isVisible ? (\n        <div className={styles.container}>\n\t\t\t\t  <div className={styles.searchContainerVisible}\n\t\t\t\t  style={{\n\t\t\t\t\t  color: theme.blackWhiteText,\n\t\t\t\t\t  background: theme.searchBackground,\n\t\t\t\t }}>\n            <form onChange={onChangeSpecies}>\n\t\t\t\t\t\t  <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n\t\t\t\t\t\t\t  \n              \t<select \n\t                onChange={(event) => setSpecies(event.target.value)}\n\t\t\t\t\t\t\t\t  value={species}\n\t\t\t\t\t\t\t\t  \n\t              >\n\t                <option selected value=\"\">\n\t                  Select pet\n\t                </option>\n\t                <option value=\"cat\">Cat</option>\n\t                <option value=\"dog\">Dog</option>\n\t              </select>\n              </div>\n            </form>\n\n            <form onChange={onChangeGender}> \n              <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n              \t<select\n\t                onChange={(event) => setSex(event.target.value)}\n\t                value={sex}\n\t              >\n\t                <option selected value=\"\">\n\t                  Pet's gender\n\t                </option>\n\t                <option value=\"M\">Boy</option>\n\t                <option value=\"F\">Girl</option>\n\t              </select>\n              </div>\n            </form>\n\n            <form onChange={onChangeDate}>\n              <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n              \t<select \n\t                onChange={(event) => setGteDate(event.target.value)}\n\t                value={gte_date}\n\t              >\n\t                <option selected value=\"1900-04-03\">\n\t                  Pet's age\n\t                </option>\n\t                <option value=\"2022-04-03\">Young</option>\n\t                <option value=\"1900-04-03\">Adult</option>\n\t              </select>\n              </div>\n            </form>\n\n            <form onChange={onChangeHasHome}>\n              <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n              \t<select\n\t                onChange={(event) => setHasHomeStr(event.target.value)}\n\t                value={hasHomeStr}\n\t              >\n\t                <option selected value=\"\">\n\t                  Pet has home?\n\t                </option>\n\t                <option value=\"true\">Yes</option>\n\t                <option value=\"false\">No</option>\n\t              </select>\n              </div>\n            </form>\n\n            <form onChange={onChangeCountry}>\n              <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n              \t<select\n\t\t\t\t\t\t\t\t  onChange={(event) => setCountry(event.target.value)}\n\t\t\t\t\t\t\t\t  \n\t                value={country}\n\t              >\n\t                <option selected value=\"\">\n\t                  Country\n\t                </option>\n\t\n\t                {countries.map((country) => (\n\t                  <option label={country.name} value={country.isoCode}></option>\n\t                ))}\n\t              </select>\n              </div>\n            </form>\n\n            <form >\n              <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n              \t<select\n\t                onChange={(event) => setStates(event.target.value)}\n\t                value={states}\n\t              >\n\t                <option selected value=\"\">\n\t                  States\n\t                </option>\n\t                {State.getStatesOfCountry(country).map((state) => (\n\t                  <option label={state.name} value={state.isoCode}></option>\n\t                ))}\n\t              </select>\n              </div>\n            </form>\n\n            <form onChange={onChangeCity}>\n              <div className={isDark ? `${styles.select_dark}` : `${styles.select}`}>\n              \t<select\n\t                onChange={(event) => setCities(event.target.value)}\n\t                value={cities}\n\t              >\n\t                <option selected value=\"\">\n\t                  Cities\n\t                </option>\n\t                {City.getCitiesOfState(country, states).map((city) => (\n\t                  <option label={city.name} value={city.name}></option>\n\t                ))}\n\t              </select>\n              </div>\n            </form>\n          </div>\n          <div>\n            <Button onClick={onClick}>Search</Button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import { ReactNode } from \"react\";\nimport styles from \"./Blobs.module.css\";\n\ninterface IProps {\n \n  children: ReactNode;\n}\n\nexport const Container = ({ children }: IProps) => {\n  return (\n    <div className={styles.blob1}>\n    \t<div className={styles.blob2}>\n\t\t\t  <div className={styles.blob3}>\n\t\t\t\t  <div className={styles.blob4}>{children}</div>\n\t\t\t  </div>\n\t    </div>\n    </div>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { PostCard } from \"../Post/PostCard\";\nimport styles from \"./PostList.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { IState } from \"../../redux/store\";\nimport { fetchPosts, searchPosts } from \"../../redux/actions/postsActions\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\nimport { SearchBar } from \"../Search/Search\";\nimport { petsFetch } from \"../../services/helpers\";\nimport { Container } from \"../Blobs/Blobs\";\n\nexport const PostList = () => {\n  const dispatch = useDispatch();\n  let location = useLocation();\n  let state = location.state as { backgroundLocation?: Location };\n  const navigate = useNavigate();\n\tconst posts = useSelector((state: IState) => state.postsReducer.posts);\n\tconst [postsArr, setPostsArr]=useState(posts)\n  const { isLoggedIn } = useSelector((state: IState) => state.authReducer);\n  const [isSearchVisible, setIsSearchVisible] = useState(false);\n  const openSearchBar = () => {\n    setIsSearchVisible(!isSearchVisible);\n  };\n  const [species, setSpecies] = useState<string>(\"\");\n  const [sex, setSex] = useState<string>(\"\");\n  const [hasHomeStr, setHasHomeStr] = useState<string>(\"\");\n  let has_home: boolean;\n  {\n    hasHomeStr === \"true\" ? (has_home = true) : (has_home = false);\n  }\n\n  const [gte_date, setGteDate] = useState(\"\");\n  const [country, setCountry] = useState<string>(\"\");\n  const [city, setCity] = useState<string>(\"\");\n\n  useEffect(() => {\n\t  dispatch(fetchPosts());\n\t  setPostsArr(posts)\n  }, [posts]);\n\n  const search = () => {\n    dispatch(\n      searchPosts(\n        species,\n        gte_date,\n        sex,\n        country,\n        city,\n        has_home,\n        isLoggedIn,\n        hasHomeStr\n      )\n    );\n  };\n\t\n  const like = (id: string) => {\n\tpetsFetch(`https://api2.adoptpets.click/posts/${id}/like`, {\n\t  method: \"POST\",\n\t  headers: {\n\t\t \"Content-Type\": \"application/json\",\n\t  },\n\t  body: JSON.stringify({ id: id }),\n\t})\n };\n\n const likeDelete = (id: string) => {\n\tpetsFetch(`https://api2.adoptpets.click/posts/${id}/like`, {\n\t  method: \"DELETE\",\n\t  headers: {\n\t\t \"Content-Type\": \"application/json\",\n\t  },\n\t  body: JSON.stringify({ id: id }),\n\t})\n };\n\n\tconst { theme } = useContext(ThemeContext);\n\tconst { isDark } = useContext(ThemeContext);\n  return (\n    <Container>\n      <SearchBar\n        isVisible={isSearchVisible}\n        openSearchBar={openSearchBar}\n        onChangeCountry={(event) => setCountry(event.target.value)}\n        onChangeSpecies={(event) => setSpecies(event.target.value)}\n        onChangeGender={(event) => setSex(event.target.value)}\n        onChangeDate={(event) => setGteDate(event.target.value)}\n        onChangeHasHome={(event) => setHasHomeStr(event.target.value)}\n        onChangeCity={(event) => setCity(event.target.value)}\n        onClick={search}\n      />\n      <div className={styles.allPosts}>\n        {posts ? (\n          <>\n            <div className={styles.postList}>\n              {posts.map((item) => (\n                <div className={styles.group} style={{\n\t\t\t\t\t\tbackgroundColor: theme.postBackground,\n\t\t\t\t\t }}>\n                  <div className={styles.petInfo}>\n                    <img\n                      src={item.avatar}\n                      className={styles.avatar}\n                      onClick={() => {\n                        navigate(\"/pet/\" + item.owner_id);\n                      }}\n                    ></img>\n                    <div\n                      onClick={() => {\n                        navigate(\"/pet/\" + item.owner_id);\n                      }}\n                      className={styles.petName}\n                      style={{\n                        color: theme.grayText,\n                      }}\n                    >\n                      {item.name}\n                    </div>\n                  </div>\n\t\t\t\t\t\t  <div className={styles.postLink}>\n\t\t\t\t\t\t\t  {item.liked ? (<img onClick={() => {\n\t                        likeDelete(item.id);\n\t                      }} src=\"/images/like2.svg\" className={styles.icon}></img>) : \n\t\t\t\t\t\t\t  (<img onClick={() => {\n\t\t\t\t\t\t\t\tlike(item.id);\n\t\t\t\t\t\t\t }} src={isDark ? \"/images/like1.svg\" : \"/images/like.svg\"} className={styles.icon}></img>)}\n                    <Link\n                      key={item.id}\n                      to={`/img/${item.id}`}\n                      state={{ backgroundLocation: location }}\n                    >\n                      <PostCard\n                        images={item.images}\n                        owner_id={item.owner_id}\n                        text={item.text}\n                        time={item.time}\n                        id={item.id}\n                      />\n                    </Link>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </>\n        ) : (\n          <div className={styles.noPostsTitle}>NO posts...</div>\n        )}\n      </div>\n    </Container>\n  );\n};\n","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { Input } from \"../Input/Input\";\nimport { Button } from \"../Button/Button\";\n\nimport styles from \"./Registration.module.css\";\nimport { validationService } from \"../../services/validation\";\nimport { register } from \"../../redux/actions/authActions\";\nimport { IState } from \"../../redux/store\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Registration = () => {\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const error = useSelector((state: IState) => state.authReducer.error);\n  const navigate = useNavigate();\n  const emailState = useSelector((state: IState) => state.authReducer.email);\n  const usernameState = useSelector(\n    (state: IState) => state.authReducer.username\n  );\n\n\n  useEffect(() => {\n    if (emailState) {\n      navigate(\"/confirm\");\n    }\n  }, [emailState, usernameState]);\n\n  const [errors, setErrors] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  });\n\n  const onChangeUserName = useCallback((event) => {\n    setUserName(event.target.value);\n  }, []);\n\n  const onChangeEmail = useCallback((event) => {\n    const value = event.target.value;\n    setEmail(value);\n\n    const error = validationService.validateEmail(value);\n\n    setErrors((errors) => ({ ...errors, email: error }));\n  }, []);\n\n  const onChangePassword = useCallback((event) => {\n    setPassword(event.target.value);\n  }, []);\n\n  const onChangeRepeatPassword = useCallback((event) => {\n    setRepeatPassword(event.target.value);\n  }, []);\n\n  const onClick = () => {\n    const errors = {\n      username: validationService.validateName(username),\n      email: validationService.validateEmail(email),\n      password: validationService.validatePassword(password),\n      repeatPassword: validationService.validateRepeatedPassword(\n        password,\n        repeatPassword\n      ),\n    };\n\n    setErrors(errors);\n\n    const values = Object.values(errors);\n    const isValid = values.every((value) => value === \"\");\n    if (isValid) {\n      dispatch(register({ username, email, password }));\n    }\n  };\n\n  const errorValues = error ? Object.values(error).flat() : \"\";\n\n  return (\n    <div className={styles.registration}>\n      <div className={styles.mainForm}>\n        <div className={styles.title}></div>\n\n        <div className={styles.form}>\n          <Input\n            type=\"text\"\n            label=\"User name\"\n            value={username}\n            onChange={onChangeUserName}\n            error={errors.username}\n          />\n          <Input\n            type=\"email\"\n            label=\"Email\"\n            value={email}\n            onChange={onChangeEmail}\n            error={errors.email}\n          />\n          <Input\n            type=\"password\"\n            label=\"Password\"\n            value={password}\n            onChange={onChangePassword}\n            error={errors.password}\n          />\n          <Input\n            type=\"password\"\n            label=\"Confirm Password\"\n            value={repeatPassword}\n            onChange={onChangeRepeatPassword}\n            error={errors.repeatPassword}\n          />\n          <p>{errorValues}</p>\n          <Button onClick={onClick}>Registration</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { userData } from \"../../redux/actions/authActions\";\nimport { fetchPets } from \"../../redux/actions/petActions\";\nimport { IState } from \"../../redux/store\";\nimport { petsFetch } from \"../../services/helpers\";\nimport { Button } from \"../Button/Button\";\nimport { Input } from \"../Input/Input\";\nimport styles from \"./UpdateUser.module.css\";\nimport { Country, State, City } from \"country-state-city\";\n\nexport const Update = () => {\n  const dispatch = useDispatch();\n  const email = useSelector((state: IState) => state.authReducer.email);\n  const [newEmail, setNewEmail] = useState(\"\");\n  const country = useSelector((state: IState) => state.authReducer.country);\n  const [newCountry, setNewCountry] = useState(\"\");\n  const city = useSelector((state: IState) => state.authReducer.city);\n  const [newCity, setNewCity] = useState(\"\");\n  const address = useSelector((state: IState) => state.authReducer.address);\n  const [newAddress, setNewAddress] = useState(\"\");\n  const phone = useSelector((state: IState) => state.authReducer.phone);\n\tconst [newPhone, setNewPhone] = useState(\"\");\n\tconst statess = useSelector((state: IState) => state.authReducer.states);\n\n  useEffect(() => {\n    dispatch(userData());\n  }, []);\n\n  const changeEmail = () => {\n    petsFetch(`https://api2.adoptpets.click/users/me`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email: newEmail }),\n\t }).then(() => {\n\t\tsetNewEmail(\"\")\n\t\tdispatch(userData())\n\t })\n  };\n\n  const changeCountry = () => {\n    petsFetch(`https://api2.adoptpets.click/users/me`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ country: newCountry }),\n\t }).then(() => {\n\t\tsetNewCountry(\"\")\n\t\tdispatch(userData())\n\t }).then(() => {\n\t\twindow.location.reload()\n\t })\n  };\n\t\n\tconst changeStates = () => {\n\t\tpetsFetch(`https://api2.adoptpets.click/users/me`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ state: states }),\n    });\n    setTimeout(() => {\n      dispatch(userData());\n      window.location.reload();\n    }, 1000);\n\t}\n\n  const changeCity = () => {\n    petsFetch(`https://api2.adoptpets.click/users/me`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ city: newCity }),\n    });\n    setTimeout(() => {\n      dispatch(userData());\n      window.location.reload();\n    }, 1000);\n  };\n\n  const changeAddress = () => {\n    petsFetch(`https://api2.adoptpets.click/users/me`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ address: newAddress }),\n    });\n    setTimeout(() => {\n      dispatch(userData());\n      window.location.reload();\n    }, 1000);\n  };\n\n  const changePhone = () => {\n    petsFetch(`https://api2.adoptpets.click/users/me`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ phone: newPhone }),\n    });\n    setTimeout(() => {\n      dispatch(userData());\n      window.location.reload();\n    }, 1000);\n  };\n\tconst countries = Country.getAllCountries();\n\tconst [states, setStates] = useState(\"\");\n\n  return (\n    <div className={styles.wrapper}>\n      <div>\n        <p>My email: {email}</p>\n        <Input\n          type=\"text\"\n          label=\"newEmail\"\n          value={newEmail}\n          onChange={(event) => setNewEmail(event.target.value)}\n        />\n        <Button onClick={changeEmail}>change Email</Button>\n      </div>\n      <div>\n        <p>My country: {country}</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"country\"\n          list=\"country\"\n          onChange={(event) => setNewCountry(event.target.value)}\n        ></input>\n        <datalist id=\"country\">\n          <option selected value=\"\">\n            Country\n          </option>\n          {countries.map((country) => (\n            <option label={country.name} value={country.isoCode}></option>\n          ))}\n        </datalist>\n        <Button onClick={changeCountry}>change country</Button>\n\t\t  </div>\n\t\t  \n\t\t  <div>\n        <p> States: {statess}</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"states\"\n          list=\"states\"\n          onChange={(event) => setStates(event.target.value)}\n        ></input>\n        <datalist id=\"states\">\n          <option selected value=\"\">\n\t\t\t states\n          </option>\n\t\t\t {State.getStatesOfCountry(country).map((state) => (\n                  <option label={state.name} value={state.isoCode}></option>\n                ))}\n        </datalist>\n        <Button onClick={changeStates}>change states</Button>\n\t\t  </div>\n\n\t\t  <div>\n        <p>My city: {city}</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"newCity\"\n          list=\"newCity\"\n          onChange={(event) => setNewCity(event.target.value)}\n        ></input>\n        <datalist id=\"newCity\">\n          <option selected value=\"\">\n\t\t\t newCity\n          </option>\n\t\t\t {City.getCitiesOfState(country, states).map((city) => (\n                  <option label={city.name} value={city.name}></option>\n                ))}\n        </datalist>\n        <Button onClick={changeCity}>change city</Button>\n\t\t  </div>\n\n      \n      <div>\n        <p>My address: {address}</p>\n        <Input\n          type=\"text\"\n          label=\"newAddress\"\n          value={newAddress}\n          onChange={(event) => setNewAddress(event.target.value)}\n        />\n        <Button onClick={changeAddress}>change city</Button>\n      </div>\n      <div>\n        <p>My phone: {phone}</p>\n        <Input\n          type=\"text\"\n          label=\"newPhone\"\n          value={newPhone}\n          onChange={(event) => setNewPhone(event.target.value)}\n        />\n        <Button onClick={changePhone}>change phone</Button>\n      </div>\n    </div>\n  );\n};\n","import { Dispatch } from \"redux\";\n\nimport { getPets } from \"../../services/pets\";\nimport { ACTIONS } from \"../constants\";\nimport { IUserState } from \"../redusers/userReduser\";\nimport { IState } from \"../store\";\n\nexport const addUser = (user: IUserState) => {\n\treturn {\n\t  type: ACTIONS.ADD_USER,\n\t  user: user,\n\t};\n };\n\nexport const userId = (id: string) => {\n\treturn async (dispatch: Dispatch, ) => {\n\t\tconst response = await fetch(\"https://api2.adoptpets.click/users/\" + id);\n\t  \n\t\tconst user = await response.json();\n\t\t dispatch(addUser(user));\n\t  \n\t};\n };","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { userId } from \"../../redux/actions/userActions\";\n\nimport { IState } from \"../../redux/store\";\n\nexport const IdUser = () => {\n\tconst  { usserId} = useParams<\"usserId\">();\n   const user = useSelector((state: IState) => state.userReducer.user);\n\tconst dispatch = useDispatch();\n\t\n\tuseEffect(() => {\n\t\tdispatch(userId(String(usserId)));\n\t\t\n\t\t\n\t}, []);\n\t\n\treturn (\n\t\t<h3>\n\t\t\t{user.username}\n\t\t</h3>\n\t)\n\t\n\n}","\nimport { useContext, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ThemeContext } from \"../../context/ThemeContext\";\n\nimport { fetchPets } from \"../../redux/actions/petActions\";\nimport { IState } from \"../../redux/store\";\nimport { petsFetch } from \"../../services/helpers\";\nimport { Container } from \"../Blobs/Blobs\";\nimport { Button } from \"../Button/Button\";\nimport styles from \"./UserProfile.module.css\";\n\nexport interface IProfileCard {\n  id: number;\n  username: string;\n  petnames: [\"string\", \"string\"];\n  image: string;\n  addrCountry: string;\n  addrCity: string;\n  description: string;\n  contacts: string;\n  onClick: () => void;\n}\n\nexport const UserProfile = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const pets = useSelector((state: IState) => state.petsReducer.pets);\n  const count = useSelector((state: IState) => state.petsReducer.count);\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, []);\n\n  const { theme } = useContext(ThemeContext);\n\n  const deletePet = (id: number) => {\n    petsFetch(`https://api2.adoptpets.click/pets/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: id }),\n    });\n  };\n\n  return (\n    <Container >\n      <div className={styles.userProfile}>\n        <div className={styles.userContainer}>\n          <div className={styles.userWrapper}>\n            <Button\n              onClick={() => {\n                navigate(\"/update\");\n              }}\n            >\n              update Profile\n            </Button>\n            <div className={styles.cardImage}>\n              <img\n                src=\"./images/add.svg\"\n                onClick={() => {\n                  navigate(\"/addpet\");\n                }}\n                className={styles.buttonAdd}\n              ></img>\n\n              {pets.length ? (\n                <div className={styles.petList}>\n                  {pets.map((item) => (\n                    <div className={styles.petContainer}>\n                      <div>\n                        <img\n                          src=\"./images/delete.svg\"\n                          className={styles.petDelete}\n                          onClick={() => {\n                            deletePet(item.id);\n                          }}\n                        ></img>\n                      </div>\n                      <div\n                        onClick={() => {\n                          navigate(\"/pet/\" + item.id);\n                        }}\n                        className={styles.petCard}\n                      >\n                        <div\n                          className={styles.petName}\n                          style={{\n                            color: theme.grayText,\n                          }}\n                        >\n                          {item.name}\n                        </div>\n                        <div className={styles.petPicture}>\n                          <img src={item.image} className={styles.petImg}></img>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  BrowserRouter,\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n} from \"react-router-dom\";\n\nimport { AboutUs } from \"../components/AboutUS/AboutUs\";\nimport { AddPet } from \"../components/AddPet/AddPet\";\nimport { UploadFile } from \"../components/AddPost/AddPost\";\nimport { Confirm } from \"../components/ConfirmRegisration/Confirm\";\nimport { Donations } from \"../components/Donations/Donations\";\nimport { Header } from \"../components/Header/Header\";\nimport { Login } from \"../components/Login/Login\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { PetHome } from \"../components/PetHome/PetHome\";\nimport { Pet } from \"../components/PetsProfile/PetsProfile\";\nimport { Post } from \"../components/Post/Post\";\nimport { FavoritePosts } from \"../components/PostList/FavotitePosts\";\nimport { PostList } from \"../components/PostList/PostList\";\nimport { Registration } from \"../components/Registration/Registration\";\nimport { Update } from \"../components/UpdadeUser/UpdadeUser\";\nimport { IdUser } from \"../components/UserProfile/IdUser\";\nimport { UserProfile } from \"../components/UserProfile/UserProfile\";\nimport { init } from \"../redux/actions/authActions\";\nimport { IState } from \"../redux/store\";\n\nexport function RootRouter() {\n  const dispatch = useDispatch();\n\n  const isLoggedIn = useSelector(\n    (state: IState) => state.authReducer.isLoggedIn\n  );\n\n  const isLog = localStorage.getItem(\"access\");\n  let location = useLocation();\n  let state = location.state as { backgroundLocation?: Location };\n\n  useEffect(() => {\n    dispatch(init());\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Routes location={state?.backgroundLocation || location}>\n        <Route path=\"/\" element={<PostList />} />\n\n        <Route path=\"/aboutUs\" element={<AboutUs />} />\n        <Route path=\"/donations\" element={<Donations />} />\n        <Route path=\"/registration\" element={<Registration />} />\n        <Route path=\"/confirm\" element={<Confirm />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/userProfile\"\n\t\t\t\t  element={!isLog ? <Navigate replace to=\"/login\" /> : <UserProfile />} />\n\t\t\t  \n\t\t\t  <Route path=\"/addpet\"\n          element={!isLog ? <Navigate replace to=\"/login\" /> : <AddPet />}/>\n\n          <Route path=\"/favorite\"\n          element={!isLog ? <Navigate replace to=\"/login\" /> : <FavoritePosts />}/>\t\n\t\t\t  \n        <Route path=\"/pet/:petId\" element={<Pet />} />\n\n\t\t\t  <Route path=\"/users/:usserId\" element={<IdUser />} />\n\t\t\t  \n\t\t\t  <Route path=\"/addpost\"\n\t\t\t\t  element={!isLog ? <Navigate replace to=\"/login\" /> : <UploadFile />} />\n\t\t\t  \n\t\t\t  <Route path=\"/update\"\n\t\t\t\t  element={!isLog ? <Navigate replace to=\"/login\" /> : <Update />} />\n\t\t\t  \n\t\t\t  <Route path=\"/pethome\"\n\t\t\t\t  element={!isLog ? <Navigate replace to=\"/login\" /> : <PetHome />} />\n\n       \n      </Routes>\n      {state?.backgroundLocation && (\n        <Routes>\n          <Route path=\"/img/:postId\" element={<Modal />} />\n        </Routes>\n      )}\n    </>\n  );\n}\n","import { ACTIONS } from \"../constants\";\n\nexport interface IPost {\n  id: string;\n  owner_id: number;\n  images: string[];\n  text: string;\n  time: Date;\n  avatar: string;\n  name: string;\n  comments: [\n    {\n      text: string;\n      id: string;\n      time: Date;\n      owner_id: number;\n      post_id: string;\n      username: string;\n    }\n  ];\n\tcomments_count: number;\n\tlikes_count: number;\n\tliked: boolean;\n}\n\nexport interface IPostsState {\n  posts: IPost[];\n  post: IPost;\n  count: number;\n}\n\nconst defaultState: IPostsState = {\n  posts: [],\n  post: {\n    id: \"\",\n    owner_id: 0,\n    images: [\"\"],\n    text: \"\",\n    time: new Date(),\n    avatar: \"\",\n    name: \"\",\n    comments: [\n      {\n        text: \"\",\n        id: \"\",\n        time: new Date(),\n        owner_id: 0,\n        post_id: \"\",\n        username: \"\",\n      },\n    ],\n\t  comments_count: 0,\n\t  likes_count: 0,\n\t  liked: false,\n  },\n  count: 0,\n};\n\nexport const postsReducer = (state = defaultState, action: any) => {\n  switch (action.type) {\n    case ACTIONS.ADD_POSTS: {\n      return {\n        ...state,\n        posts: action.posts,\n        count: action.count,\n      };\n    }\n\n    case ACTIONS.ADD_POST: {\n      return { ...state, post: action.post };\n    }\n\n    case ACTIONS.DELETE_POST: {\n      return {\n        ...state,\n        \n\t\t\tpost: {\n\t\t\t\tid: \"\",\n\t\t\t\towner_id: 0,\n\t\t\t\timages: [\"\"],\n\t\t\t\ttext: \"\",\n\t\t\t\ttime: new Date(),\n\t\t\t\tavatar: \"\",\n\t\t\t\tname: \"\",\n\t\t\t\tcomments: [\n\t\t\t\t  {\n\t\t\t\t\t text: \"\",\n\t\t\t\t\t id: \"\",\n\t\t\t\t\t time: new Date(),\n\t\t\t\t\t owner_id: \"\",\n\t\t\t\t\t post_id: \"\",\n\t\t\t\t\t username: \"\",\n\t\t\t\t  },\n\t\t\t\t],\n\t\t\t\tcomments_count: 0,\n        },\n      }\n    }\n\n    default:\n      return state;\n  }\n};\n","import { ACTIONS } from \"../constants\";\n\nexport interface IAuthState {\n  error: any;\n  username: string;\n  email: string;\n  id: number;\n  isLoggedIn: boolean;\n\tcountry: string;\n\tstates: string;\n  city: string;\n  address: string;\n\tphone: string;\n\t\n}\n\n\nconst defaultState: IAuthState = {\n  error: null,\n  username: \"\",\n  email: \"\",\n  id: 0,\n  isLoggedIn: false,\n\tcountry: \"\",\n  states: \"\",\n  city: \"\",\n  address: \"\",\n\tphone: \"\",\n\t\n  \n};\n\nexport const authReducer = (state = defaultState, action: any) => {\n  if (action.type === ACTIONS.REGISTER_FAILURE) {\n    return { ...state, error: action.error };\n  }\n\n  if (action.type === ACTIONS.LOGOUT) {\n    state = defaultState;\n    return {\n      undefined,\n    };\n  }\n  if (action.type === ACTIONS.REGISTER_SUCCESS) {\n    return {\n      ...state,\n      error: null,\n      username: action.username,\n      email: action.email,\n      id: action.id,\n    };\n  }\n\n  if (action.type === ACTIONS.LOGIN_SUCCESS) {\n    return {\n      ...state,\n      error: null,\n      username: action.username,\n      email: action.email,\n      id: action.id,\n      isLoggedIn: true,\n      country: action.country,\n      city: action.city,\n      address: action.address,\n      phone: action.phone,\n    };\n  }\n\n  return state;\n};\n\n","import { ACTIONS } from \"../constants\";\n\nexport interface IPet {\n  name: string;\n  description: string;\n  sex: string;\n  species: string;\n  birth_date: string;\n  image: string;\n  has_home: boolean;\n  id: number;\n\towner_id: number;\n\tcountry: string;\n\tcity: string;\n}\n\nexport interface IPetsState {\n  pets: IPet[];\n  pet: IPet;\n  count: number;\n}\n\nconst defaultState: IPetsState = {\n  pets: [],\n  pet: {\n    name: \"\",\n    description: \"\",\n    sex: \"\",\n    species: \"\",\n    birth_date: \"\",\n    image: \"\",\n    has_home: false,\n    id: 0,\n\t  owner_id: 0,\n\t  country: \"\",\n\t  city: \"\",\n  },\n  count: 0,\n};\n\nexport const petsReducer = (state = defaultState, action: any) => {\n  switch (action.type) {\n    case ACTIONS.ADD_PETS: {\n      return {\n        ...state,\n        pets: action.pets,\n        count: action.count,\n      };\n    }\n\n    case ACTIONS.ADD_PET: {\n      return { ...state, pet: action.pet };\n    }\n\n    case ACTIONS.DELETE_PET: {\n      return {\n        ...state,\n        pet: {\n          name: \"\",\n          description: \"\",\n          sex: \"\",\n          species: \"\",\n          birth_date: \"\",\n          image: \"\",\n          has_home: false,\n          id: 0,\n          owner_id: 0,\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { ACTIONS } from \"../constants\";\n\nexport interface IUserState {\n\t\n\t user: {\n\t\t username: string;\n\t\t email: string;\n\t\t country: string;\n\t\t states: string;\n\t\tcity: string;\n\t\taddress: string;\n\t\t phone: string;\n\t\t pets: [\n\t\t\t {\n\t\t\t\t name: string;\n\tdescription: string;\n\tsex: string;\n\tspecies: string;\n\tbirth_date: string;\n\timage: string;\n\thas_home: boolean;\n\tid: number;\n\t\t\t }\n\t\t ]\n\t }\n }\n \n \n const defaultState: IUserState = {\n\t\n\t user: {\n\t\t \n\t\t\t username: \"\",\n\t\t\t email: \"\",\n\t\t\t country: \"\",\n\t\t\t states: \"\",\n\t\t\tcity: \"\",\n\t\t\taddress: \"\",\n\t\t\t phone: \"\",\n\t\t\t pets: [\n\t\t\t\t {\n\t\t\t\t\t name: \"\",\n\t\tdescription: \"\",\n\t\tsex: \"\",\n\t\tspecies: \"\",\n\t\tbirth_date: \"\",\n\t\timage: \"\",\n\t\thas_home: false,\n\t\tid: 0,\n\t\t\t\t }\n\t\t\t ]\n\t\t }\n\t\n };\n \n export const userReducer = (state = defaultState, action: any) => {\n\t\n\tif (action.type === ACTIONS.ADD_USER) {\n\t  return {\n\t\t ...state, user: action.user\n\t\t \n\t\t \n\t\t \n\t\t \n\t\t \n\t  };\n\t}\n \n\treturn state;\n };\n \n ","import { ACTIONS } from \"../constants\";\nexport interface IHomeState {\n  id: string;\n}\nconst defaultState: IHomeState = {\n  id: \"\",\n};\n\n\nexport const homeReducer = (state = defaultState, action:any) => {\n\tswitch (action.type) {\n\t\tcase ACTIONS.ADD_HOME: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\n\t\t\t\tid: action.id,\n\t\t\t}\n\t}\n\t\t \n\t  case 'DELETE_HOME':\n\t\treturn {\n\t\t\t...state,\n\t\t\t\n\t\t\t  id: \"\",\n\t\t\t}\n\t\t \n\t  default:\n\t\t return state\n\t}\n }\n \n\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport { IPostsState, postsReducer } from \"./redusers/postsReduser\";\nimport { IAuthState, authReducer } from \"./redusers/authReduser\";\nimport { IPetsState, petsReducer } from \"./redusers/petsReduser\";\nimport { IUserState, userReducer } from \"./redusers/userReduser\";\nimport { IHomeState, homeReducer } from \"./redusers/homeReduser\"\nexport interface IState {\n\tpetsReducer: IPetsState;\n\tauthReducer: IAuthState;\n\tpostsReducer: IPostsState;\n\tuserReducer: IUserState;\n\thomeReducer: IHomeState;\n}\n\nexport const store = createStore(\n  combineReducers({ petsReducer, authReducer, postsReducer, userReducer, homeReducer }),\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import { Provider } from \"react-redux\";\nimport { useContext } from \"react\";\n\nimport { RootRouter } from \"./routing/RootRouter\";\nimport \"./App.css\";\nimport { store } from \"./redux/store\";\nimport { ThemeContext } from \"./context/ThemeContext\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <Provider store={store}>\n      <div\n        className=\"App\"\n        style={{\n          background: theme.background,\n        }}\n      >\n        <BrowserRouter><RootRouter /></BrowserRouter>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProdiver } from './context/ThemeContext';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <ThemeProdiver>\n    <App />\n  </ThemeProdiver>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}